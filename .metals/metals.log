2024.07.06 21:22:39 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@6e92daa4]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@61842e8a]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@6e92daa4]
2024.07.06 21:22:39 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.06 21:22:40 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:22:43 WARN  Build server is not auto-connectable.
2024.07.06 21:22:43 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:23:12 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:23:23 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:23:23 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 06, 2024 9:23:24 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 16
Jul 06, 2024 9:23:24 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 17
Jul 06, 2024 9:23:24 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 18
2024.07.06 21:23:24 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:24:08 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:27:36 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:27:36 INFO  no build target found for A:\developement\scala project\todo\todolist\build.sbt. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:27:36 INFO  no build target found for A:\developement\scala project\todo\todolist\build.sbt. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:19 INFO  no build target found for A:\developement\scala project\todo\todolist\build.sbt. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:25 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:25 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:27 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:35 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:36:39 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:38:45 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:38:45 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:38:45 WARN  no build target for: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
2024.07.06 21:38:45 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:38:45 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.06 21:38:45 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:43:32 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@309ef44]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@35e08db7]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@309ef44]
2024.07.08 08:43:36 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 08:43:37 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:43:43 INFO  running 'C:\Users\adars\AppData\Local\Coursier\cache\arc\https\github.com\adoptium\temurin17-binaries\releases\download\jdk-17%252B35\OpenJDK17-jdk_x64_windows_hotspot_17_35.zip\jdk-17+35\bin\java.exe -Djline.terminal=jline.UnsupportedTerminal -Dsbt.log.noformat=true -Dfile.encoding=UTF-8 -jar C:\Users\adars\AppData\Local\Temp\metals8895402757480540340\sbt-launch.jar -Dbloop.export-jar-classifiers=sources bloopInstall'
2024.07.08 08:43:50 INFO  [info] welcome to sbt 1.10.0 (Eclipse Adoptium Java 17)
2024.07.08 08:43:50 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:43:52 INFO  [info] loading settings for project todolist-build-build-build from metals.sbt ...
2024.07.08 08:43:52 INFO  [info] loading project definition from A:\developement\scala project\todo\todolist\project\project\project
2024.07.08 08:43:55 INFO  [info] loading settings for project todolist-build-build from metals.sbt ...
2024.07.08 08:43:55 INFO  [info] loading project definition from A:\developement\scala project\todo\todolist\project\project
2024.07.08 08:44:01 INFO  [success] Generated .bloop\todolist-build-build.json
2024.07.08 08:44:01 INFO  [success] Total time: 6 s, completed Jul 8, 2024, 8:44:01 AM
2024.07.08 08:44:01 INFO  [info] loading settings for project todolist-build from metals.sbt,plugins.sbt ...
2024.07.08 08:44:01 INFO  [info] loading project definition from A:\developement\scala project\todo\todolist\project
2024.07.08 08:44:04 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:05 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:05 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:07 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:07 INFO  [success] Generated .bloop\todolist-build.json
2024.07.08 08:44:07 INFO  [success] Total time: 5 s, completed Jul 8, 2024, 8:44:07 AM
2024.07.08 08:44:08 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:08 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:10 INFO  [info] loading settings for project root from build.sbt ...
2024.07.08 08:44:10 INFO  [info]   __              __
2024.07.08 08:44:10 INFO  [info]   \ \     ____   / /____ _ __  __
2024.07.08 08:44:10 INFO  [info]    \ \   / __ \ / // __ `// / / /
2024.07.08 08:44:10 INFO  [info]    / /  / /_/ // // /_/ // /_/ /
2024.07.08 08:44:10 INFO  [info]   /_/  / .___//_/ \__,_/ \__, /
2024.07.08 08:44:10 INFO  [info]       /_/               /____/
2024.07.08 08:44:10 INFO  [info] 
2024.07.08 08:44:10 INFO  [info] Version 3.0.4 running Java 17
2024.07.08 08:44:10 INFO  [info] 
2024.07.08 08:44:10 INFO  [info] Play is run entirely by the community. Please consider contributing and/or donating:
2024.07.08 08:44:10 INFO  [info] https://www.playframework.com/sponsors
2024.07.08 08:44:10 INFO  [info] 
2024.07.08 08:44:14 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:14 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:16 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:17 INFO  [success] Generated .bloop\root.json
2024.07.08 08:44:20 INFO  [success] Generated .bloop\root-test.json
2024.07.08 08:44:20 INFO  [success] Total time: 10 s, completed Jul 8, 2024, 8:44:20 AM
2024.07.08 08:44:20 INFO  time: ran 'sbt bloopInstall' in 36s
2024.07.08 08:44:20 INFO  Attempting to connect to the build server...
2024.07.08 08:44:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 08:44:26 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\HomeController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:44:27 INFO  time: Connected to build server in 6.88s
2024.07.08 08:44:27 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 08:44:27 INFO  time: Imported build in 0.13s
2024.07.08 08:44:36 INFO  time: indexed workspace in 8.82s
2024.07.08 08:44:36 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:44:42 WARN  javac exited with exit code 1
2024.07.08 08:44:42 INFO  time: compiled root in 5.24s
2024.07.08 08:44:42 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:44:45 WARN  javac exited with exit code 1
2024.07.08 08:44:45 INFO  time: compiled root in 2.99s
2024.07.08 08:44:45 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:44:47 WARN  javac exited with exit code 1
2024.07.08 08:44:47 INFO  time: compiled root in 2.47s
2024.07.08 08:46:22 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:46:22 INFO  time: compiled root in 0.11s
2024.07.08 08:46:36 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:46:38 WARN  javac exited with exit code 1
2024.07.08 08:46:38 INFO  time: compiled root in 2.22s
2024.07.08 08:46:42 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:46:44 WARN  javac exited with exit code 1
2024.07.08 08:46:44 INFO  time: compiled root in 2.2s
2024.07.08 08:46:44 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:46:44 INFO  time: compiled root in 0.23s
2024.07.08 08:46:46 WARN  Using indexes to guess the definition of ControllerComponents
2024.07.08 08:46:49 WARN  Using indexes to guess the definition of BaseController
2024.07.08 08:46:52 WARN  Using indexes to guess the definition of Inject
2024.07.08 08:46:57 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:46:59 WARN  javac exited with exit code 1
2024.07.08 08:46:59 INFO  time: compiled root in 2.02s
2024.07.08 08:47:03 INFO  compiling root (8 scala sources and 1 java source)
Jul 08, 2024 8:47:04 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 223
2024.07.08 08:47:05 WARN  javac exited with exit code 1
2024.07.08 08:47:05 INFO  time: compiled root in 2.02s
Jul 08, 2024 8:47:07 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 233
2024.07.08 08:47:11 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:47:11 INFO  time: compiled root in 0.18s
2024.07.08 08:47:12 WARN  Using indexes to guess the definition of Inject
Exception in thread "pool-5-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024.07.08 08:47:19 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:47:19 INFO  time: compiled root in 0.2s
2024.07.08 08:47:23 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:47:25 WARN  javac exited with exit code 1
2024.07.08 08:47:25 INFO  time: compiled root in 1.83s
Jul 08, 2024 8:48:30 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 382
Jul 08, 2024 8:48:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 387
Jul 08, 2024 8:48:48 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 403
2024.07.08 08:48:55 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:48:57 WARN  javac exited with exit code 1
2024.07.08 08:48:57 INFO  time: compiled root in 2.86s
Jul 08, 2024 8:49:05 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 415
Jul 08, 2024 8:49:05 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 416
2024.07.08 08:49:50 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:49:50 INFO  time: compiled root in 0.22s
2024.07.08 08:49:55 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:49:55 INFO  time: compiled root in 0.16s
2024.07.08 08:50:11 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:50:11 INFO  time: compiled root in 0.16s
Jul 08, 2024 8:50:15 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 473
Jul 08, 2024 8:50:22 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 475
2024.07.08 08:51:19 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:51:21 WARN  javac exited with exit code 1
2024.07.08 08:51:21 INFO  time: compiled root in 1.96s
2024.07.08 08:51:21 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:51:23 WARN  javac exited with exit code 1
2024.07.08 08:51:23 INFO  time: compiled root in 1.77s
2024.07.08 08:53:06 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:53:08 WARN  javac exited with exit code 1
2024.07.08 08:53:08 INFO  time: compiled root in 2.07s
2024.07.08 08:56:17 INFO  compiling root (8 scala sources and 1 java source)
Jul 08, 2024 8:56:18 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 783
2024.07.08 08:56:21 INFO  time: compiled root in 3.81s
Jul 08, 2024 8:56:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 793
2024.07.08 08:56:25 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:56:25 INFO  time: compiled root in 0.16s
Jul 08, 2024 8:56:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 819
Jul 08, 2024 8:56:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 831
2024.07.08 08:56:50 INFO  compiling root (8 scala sources and 1 java source)
2024.07.08 08:56:50 INFO  time: compiled root in 0.16s
2024.07.08 08:56:58 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:57:00 WARN  javac exited with exit code 1
2024.07.08 08:57:00 INFO  time: compiled root in 2.23s
2024.07.08 08:58:27 WARN  Using indexes to guess the definition of List
2024.07.08 08:58:27 WARN  Using indexes to guess the definition of List
2024.07.08 08:58:28 WARN  Using indexes to guess the definition of taskList1
2024.07.08 08:58:28 WARN  Using indexes to guess the definition of Nil
2024.07.08 08:58:29 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:58:29 INFO  time: compiled root in 0.17s
2024.07.08 08:58:31 WARN  Using indexes to guess the definition of List
2024.07.08 08:58:34 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:58:34 INFO  time: compiled root in 0.17s
2024.07.08 08:58:40 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:58:40 INFO  time: compiled root in 0.15s
2024.07.08 08:58:41 WARN  Using indexes to guess the definition of List
Jul 08, 2024 8:58:45 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1149
Jul 08, 2024 8:58:51 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1152
2024.07.08 08:58:51 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:58:51 INFO  time: compiled root in 0.19s
2024.07.08 08:58:53 WARN  Using indexes to guess the definition of List
2024.07.08 08:58:59 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:58:59 INFO  time: compiled root in 0.15s
2024.07.08 08:59:02 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:59:02 INFO  time: compiled root in 0.15s
2024.07.08 08:59:02 INFO  Shutting down server
2024.07.08 08:59:02 INFO  shutting down Metals
2024.07.08 08:59:02 INFO  Shut down connection with build server.
2024.07.08 08:59:02 INFO  Exiting server
2024.07.08 08:59:20 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@6f3fb15f]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@73648522]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@6f3fb15f]
2024.07.08 08:59:20 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 08:59:21 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 08:59:21 INFO  Attempting to connect to the build server...
2024.07.08 08:59:21 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 08:59:21 INFO  time: Connected to build server in 0.58s
2024.07.08 08:59:21 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 08:59:21 INFO  time: Imported build in 0.1s
2024.07.08 08:59:49 INFO  time: indexed workspace in 26s
2024.07.08 08:59:51 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:59:51 INFO  time: compiled root in 0.21s
2024.07.08 08:59:51 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 08:59:51 INFO  time: compiled root in 0.2s
Jul 08, 2024 9:00:25 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 53
2024.07.08 09:01:04 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:01:04 INFO  time: compiled root in 0.17s
Jul 08, 2024 9:01:30 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 210
2024.07.08 09:01:32 WARN  Using indexes to guess the definition of List
2024.07.08 09:01:38 WARN  Using indexes to guess the definition of List
2024.07.08 09:02:01 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:02:01 INFO  time: compiled root in 0.14s
2024.07.08 09:02:24 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:02:24 INFO  time: compiled root in 0.16s
2024.07.08 09:02:28 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:02:28 INFO  time: compiled root in 0.15s
2024.07.08 09:02:37 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:02:37 INFO  time: compiled root in 0.15s
Jul 08, 2024 9:02:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 427
Jul 08, 2024 9:02:54 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 438
Jul 08, 2024 9:02:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 446
Jul 08, 2024 9:03:51 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 484
2024.07.08 09:03:52 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:03:52 INFO  time: compiled root in 0.15s
2024.07.08 09:03:57 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:03:57 INFO  time: compiled root in 0.17s
2024.07.08 09:04:02 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:04:02 INFO  time: compiled root in 0.18s
Jul 08, 2024 9:04:26 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 534
2024.07.08 09:04:27 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:04:27 INFO  time: compiled root in 0.14s
2024.07.08 09:04:30 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:04:30 INFO  time: compiled root in 0.15s
Jul 08, 2024 9:04:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 571
Jul 08, 2024 9:04:33 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 581
2024.07.08 09:04:54 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:04:54 INFO  time: compiled root in 0.17s
2024.07.08 09:05:10 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:05:12 WARN  javac exited with exit code 1
2024.07.08 09:05:12 INFO  time: compiled root in 1.95s
Jul 08, 2024 9:05:14 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 640
2024.07.08 09:05:21 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:05:23 WARN  javac exited with exit code 1
2024.07.08 09:05:23 INFO  time: compiled root in 2.05s
2024.07.08 09:05:26 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:05:28 WARN  javac exited with exit code 1
2024.07.08 09:05:28 INFO  time: compiled root in 1.84s
2024.07.08 09:05:33 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:05:33 INFO  time: compiled root in 0.16s
2024.07.08 09:05:57 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:05:59 WARN  javac exited with exit code 1
2024.07.08 09:05:59 INFO  time: compiled root in 1.84s
2024.07.08 09:06:01 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:06:01 INFO  time: compiled root in 0.15s
2024.07.08 09:06:11 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:06:14 WARN  javac exited with exit code 1
2024.07.08 09:06:14 INFO  time: compiled root in 2.42s
Jul 08, 2024 9:06:21 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 790
Jul 08, 2024 9:06:22 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 799
Jul 08, 2024 9:09:02 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 835
2024.07.08 09:09:49 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:14: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
    Ok(s"$")
         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

Jul 08, 2024 9:09:58 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1224
2024.07.08 09:10:17 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:10:20 WARN  javac exited with exit code 1
2024.07.08 09:10:20 INFO  time: compiled root in 2.34s
Jul 08, 2024 9:24:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1395
Jul 08, 2024 9:24:45 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1404
2024.07.08 09:25:13 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:25:13 INFO  time: compiled root in 0.19s
Jul 08, 2024 9:26:25 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1434
Jul 08, 2024 9:26:43 AM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
Jul 08, 2024 9:27:24 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1538
Jul 08, 2024 9:27:25 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1547
Jul 08, 2024 9:28:03 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1624
Jul 08, 2024 9:28:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1715
2024.07.08 09:28:29 WARN  Using indexes to guess the definition of product
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Jul 08, 2024 9:28:30 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1761
2024.07.08 09:28:48 INFO  compiling root (11 scala sources and 2 java sources)
2024.07.08 09:28:48 INFO  time: compiled root in 0.2s
2024.07.08 09:29:52 INFO  Shutting down server
2024.07.08 09:29:52 INFO  shutting down Metals
2024.07.08 09:29:52 INFO  Shut down connection with build server.
2024.07.08 09:29:52 INFO  Exiting server
2024.07.08 09:30:02 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@1be323dd]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@2be0b50e]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@1be323dd]
2024.07.08 09:30:02 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 09:30:03 INFO  Attempting to connect to the build server...
2024.07.08 09:30:03 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 09:30:03 INFO  time: Connected to build server in 0.52s
2024.07.08 09:30:03 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 09:30:09 INFO  time: indexed workspace in 4.47s
2024.07.08 09:30:09 INFO  compiling root (11 scala sources and 2 java sources)
2024.07.08 09:30:09 INFO  time: compiled root in 0.4s
2024.07.08 09:30:09 INFO  compiling root (11 scala sources and 2 java sources)
2024.07.08 09:30:09 INFO  time: compiled root in 0.43s
2024.07.08 09:30:50 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:30:52 WARN  javac exited with exit code 1
2024.07.08 09:30:52 INFO  time: compiled root in 2.15s
2024.07.08 09:35:58 INFO  compiling root (9 scala sources and 1 java source)
2024.07.08 09:36:00 WARN  javac exited with exit code 1
2024.07.08 09:36:00 INFO  time: compiled root in 2.14s
2024.07.08 09:36:17 INFO  compiling root (10 scala sources and 1 java source)
2024.07.08 09:36:19 WARN  javac exited with exit code 1
2024.07.08 09:36:19 INFO  time: compiled root in 2.02s
2024.07.08 09:36:19 INFO  compiling root (10 scala sources and 1 java source)
Jul 08, 2024 9:36:22 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 204
2024.07.08 09:36:22 WARN  javac exited with exit code 1
2024.07.08 09:36:22 INFO  time: compiled root in 2.29s
2024.07.08 09:36:23 WARN  Using indexes to guess the definition of Singleton
2024.07.08 09:36:51 INFO  compiling root (10 scala sources and 1 java source)
Jul 08, 2024 9:36:53 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 297
2024.07.08 09:36:53 WARN  javac exited with exit code 1
2024.07.08 09:36:53 INFO  time: compiled root in 1.83s
2024.07.08 09:36:57 WARN  Using indexes to guess the definition of BaseController
2024.07.08 09:37:08 INFO  compiling root (10 scala sources and 1 java source)
2024.07.08 09:37:08 INFO  time: compiled root in 0.16s
2024.07.08 09:39:09 WARN  Using indexes to guess the definition of ControllerComponents
2024.07.08 09:39:13 WARN  Using indexes to guess the definition of BaseController
2024.07.08 09:39:13 WARN  Using indexes to guess the definition of BaseController
2024.07.08 09:39:22 INFO  compiling root (10 scala sources and 1 java source)
2024.07.08 09:39:24 WARN  javac exited with exit code 1
2024.07.08 09:39:24 INFO  time: compiled root in 2.07s
2024.07.08 09:39:25 INFO  compiling root (10 scala sources and 1 java source)
2024.07.08 09:39:27 WARN  javac exited with exit code 1
2024.07.08 09:39:27 INFO  time: compiled root in 2s
Jul 08, 2024 9:39:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 465
Jul 08, 2024 9:39:39 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 505
2024.07.08 09:39:52 INFO  compiling root (10 scala sources and 1 java source)
2024.07.08 09:39:52 INFO  time: compiled root in 0.16s
2024.07.08 09:40:26 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:26 INFO  time: compiled root in 0.18s
Jul 08, 2024 9:40:27 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 671
Jul 08, 2024 9:40:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 679
2024.07.08 09:40:31 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:31 INFO  time: compiled root in 0.15s
2024.07.08 09:40:31 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:31 INFO  time: compiled root in 0.13s
2024.07.08 09:40:31 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:31 INFO  time: compiled root in 0.28s
2024.07.08 09:40:31 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:31 INFO  time: compiled root in 0.13s
2024.07.08 09:40:42 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:40:44 WARN  javac exited with exit code 1
2024.07.08 09:40:44 INFO  time: compiled root in 2.03s
2024.07.08 09:41:18 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:41:20 WARN  javac exited with exit code 1
2024.07.08 09:41:20 INFO  time: compiled root in 1.88s
2024.07.08 09:41:36 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:41:38 WARN  javac exited with exit code 1
2024.07.08 09:41:38 INFO  time: compiled root in 2.03s
2024.07.08 09:42:16 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:42:18 WARN  javac exited with exit code 1
2024.07.08 09:42:18 INFO  time: compiled root in 1.94s
2024.07.08 09:42:37 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:42:37 INFO  time: compiled root in 0.17s
2024.07.08 09:42:51 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:42:53 WARN  javac exited with exit code 1
2024.07.08 09:42:53 INFO  time: compiled root in 1.9s
Jul 08, 2024 9:42:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 940
Jul 08, 2024 9:43:11 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1023
2024.07.08 09:43:22 INFO  compiling root (7 scala sources)
2024.07.08 09:43:22 WARN  Invalid text document uri received from build server: file:///A:/developement/scala%20project/todo/todolist/target/scala-2.13/routes/main/controllers/routes.java
2024.07.08 09:43:22 INFO  time: compiled root in 0.15s
2024.07.08 09:43:41 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:43:43 WARN  javac exited with exit code 1
2024.07.08 09:43:43 INFO  time: compiled root in 1.98s
Jul 08, 2024 9:46:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1071
2024.07.08 09:47:24 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:47:26 WARN  javac exited with exit code 1
2024.07.08 09:47:26 INFO  time: compiled root in 1.81s
Jul 08, 2024 9:47:27 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1128
2024.07.08 09:47:29 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:47:31 WARN  javac exited with exit code 1
2024.07.08 09:47:31 INFO  time: compiled root in 1.98s
Jul 08, 2024 9:47:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1149
2024.07.08 09:48:30 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:48:32 WARN  javac exited with exit code 1
2024.07.08 09:48:32 INFO  time: compiled root in 2.09s
2024.07.08 09:48:40 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:48:42 WARN  javac exited with exit code 1
2024.07.08 09:48:42 INFO  time: compiled root in 1.92s
Jul 08, 2024 9:50:00 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1336
2024.07.08 09:50:54 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:50:54 INFO  time: compiled root in 0.17s
Jul 08, 2024 9:51:00 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1580
2024.07.08 09:51:20 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:51:20 INFO  time: compiled root in 0.16s
2024.07.08 09:51:34 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:51:36 WARN  javac exited with exit code 1
2024.07.08 09:51:36 INFO  time: compiled root in 1.83s
2024.07.08 09:52:21 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:52:21 INFO  time: compiled root in 0.16s
2024.07.08 09:52:38 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:52:38 INFO  time: compiled root in 0.15s
2024.07.08 09:53:08 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:53:08 INFO  time: compiled root in 0.17s
Jul 08, 2024 9:53:37 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2136
Jul 08, 2024 9:53:45 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2165
2024.07.08 09:53:47 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:53:47 INFO  time: compiled root in 0.17s
2024.07.08 09:54:28 WARN  Using indexes to guess the definition of validateLogin
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024.07.08 09:54:50 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:54:50 INFO  time: compiled root in 0.15s
2024.07.08 09:55:03 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:55:03 INFO  time: compiled root in 0.15s
2024.07.08 09:55:36 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
      Ok(s"$")
           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.08 09:55:40 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
      Ok(s"$username and $")
                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:239)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

Jul 08, 2024 9:55:41 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2390
2024.07.08 09:55:42 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
      Ok(s"$username and $"password)
                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:239)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.08 09:55:47 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
      Ok(s"$username and $")
                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:239)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.08 09:55:50 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:55:52 WARN  javac exited with exit code 1
2024.07.08 09:55:52 INFO  time: compiled root in 1.92s
2024.07.08 09:56:05 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:56:07 WARN  javac exited with exit code 1
2024.07.08 09:56:07 INFO  time: compiled root in 2.11s
2024.07.08 09:57:30 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:57:32 WARN  javac exited with exit code 1
2024.07.08 09:57:32 INFO  time: compiled root in 2.01s
Jul 08, 2024 9:57:33 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2525
Jul 08, 2024 9:57:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2533
2024.07.08 09:57:45 ERROR Failed to tokenize input for semantic tokens for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
      Ok(s"$username and $password $")
                                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:239)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.08 09:57:46 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:57:48 WARN  javac exited with exit code 1
2024.07.08 09:57:48 INFO  time: compiled root in 2.07s
2024.07.08 09:59:01 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 09:59:03 WARN  javac exited with exit code 1
2024.07.08 09:59:03 INFO  time: compiled root in 1.9s
2024.07.08 10:01:11 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:01:11 INFO  time: compiled root in 0.17s
Jul 08, 2024 10:01:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2706
Jul 08, 2024 10:01:41 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2715
2024.07.08 10:01:44 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:01:46 WARN  javac exited with exit code 1
2024.07.08 10:01:46 INFO  time: compiled root in 2.06s
Jul 08, 2024 10:01:56 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2776
2024.07.08 10:01:58 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:02:00 WARN  javac exited with exit code 1
2024.07.08 10:02:00 INFO  time: compiled root in 2.23s
Jul 08, 2024 10:02:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2879
2024.07.08 10:02:21 WARN  Using indexes to guess the definition of taskList
Jul 08, 2024 10:02:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2893
Jul 08, 2024 10:02:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2892
2024.07.08 10:02:25 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:02:27 WARN  javac exited with exit code 1
2024.07.08 10:02:27 INFO  time: compiled root in 2.08s
Jul 08, 2024 10:02:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2924
Jul 08, 2024 10:02:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2934
Jul 08, 2024 10:03:39 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2944
Jul 08, 2024 10:03:51 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2946
Jul 08, 2024 10:03:52 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2947
Jul 08, 2024 10:04:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2984
2024.07.08 10:04:53 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:04:53 INFO  time: compiled root in 0.2s
2024.07.08 10:05:01 INFO  compiling root (11 scala sources and 1 java source)
2024.07.08 10:05:03 WARN  javac exited with exit code 1
2024.07.08 10:05:03 INFO  time: compiled root in 1.9s
Jul 08, 2024 10:09:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3000
2024.07.08 11:08:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:08:51 WARN  javac exited with exit code 1
2024.07.08 11:08:51 INFO  time: compiled root in 2.48s
2024.07.08 11:08:51 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:08:53 WARN  javac exited with exit code 1
2024.07.08 11:08:53 INFO  time: compiled root in 1.87s
2024.07.08 11:09:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:09:31 INFO  time: compiled root in 90ms
2024.07.08 11:10:08 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:10:08 INFO  time: compiled root in 91ms
Jul 08, 2024 11:10:22 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3422
Jul 08, 2024 11:10:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3471
2024.07.08 11:10:34 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:10:34 INFO  time: compiled root in 99ms
2024.07.08 11:10:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:10:43 INFO  time: compiled root in 93ms
2024.07.08 11:10:54 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:10:54 INFO  time: compiled root in 0.1s
2024.07.08 11:10:54 WARN  Using indexes to guess the definition of Unit
2024.07.08 11:11:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:11:28 INFO  time: compiled root in 90ms
2024.07.08 11:11:28 WARN  Using indexes to guess the definition of Boolean
2024.07.08 11:11:41 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:11:41 INFO  time: compiled root in 82ms
2024.07.08 11:12:47 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\Models\TaskListInMemonryModel.scala:8: error: [dialect scala213] identifier expected but \n found
  def validateUser(username:String, password:String):Boolean=???
                                                                ^
2024.07.08 11:12:50 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\Models\TaskListInMemonryModel.scala:8: error: [dialect scala213] identifier expected but \n found
  def validateUser(username:String, password:String):Boolean=???
                                                                ^
Jul 08, 2024 11:13:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4133
2024.07.08 11:13:27 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:13:27 INFO  time: compiled root in 0.1s
2024.07.08 11:13:30 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:13:30 INFO  time: compiled root in 91ms
2024.07.08 11:13:32 WARN  Using indexes to guess the definition of Map
2024.07.08 11:13:34 WARN  Using indexes to guess the definition of Map
2024.07.08 11:13:42 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:13:42 INFO  time: compiled root in 93ms
2024.07.08 11:14:03 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:14:03 WARN  Using indexes to guess the definition of Boolean
2024.07.08 11:14:03 INFO  time: compiled root in 0.16s
2024.07.08 11:15:13 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:15:13 INFO  time: compiled root in 0.17s
2024.07.08 11:15:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:15:43 INFO  time: compiled root in 0.15s
2024.07.08 11:15:47 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:15:50 WARN  javac exited with exit code 1
2024.07.08 11:15:50 INFO  time: compiled root in 2.22s
2024.07.08 11:16:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:16:50 WARN  javac exited with exit code 1
2024.07.08 11:16:50 INFO  time: compiled root in 1.92s
2024.07.08 11:17:08 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:17:10 WARN  javac exited with exit code 1
2024.07.08 11:17:10 INFO  time: compiled root in 2.01s
2024.07.08 11:17:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:17:20 WARN  javac exited with exit code 1
2024.07.08 11:17:20 INFO  time: compiled root in 1.9s
2024.07.08 11:17:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:17:30 WARN  javac exited with exit code 1
2024.07.08 11:17:30 INFO  time: compiled root in 1.84s
Jul 08, 2024 11:17:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4965
2024.07.08 11:17:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:17:52 WARN  javac exited with exit code 1
2024.07.08 11:17:52 INFO  time: compiled root in 2.04s
2024.07.08 11:18:33 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:18:33 INFO  time: compiled root in 0.15s
2024.07.08 11:18:36 WARN  Using indexes to guess the definition of TaskListInMemonryModel
2024.07.08 11:18:38 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:18:38 INFO  time: compiled root in 0.15s
2024.07.08 11:18:40 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:18:40 INFO  time: compiled root in 0.15s
2024.07.08 11:19:01 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:19:01 INFO  time: compiled root in 0.17s
2024.07.08 11:19:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:19:21 INFO  time: compiled root in 0.15s
2024.07.08 11:19:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:19:52 WARN  javac exited with exit code 1
2024.07.08 11:19:52 INFO  time: compiled root in 1.85s
2024.07.08 11:19:52 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:19:54 WARN  javac exited with exit code 1
2024.07.08 11:19:54 INFO  time: compiled root in 1.44s
Jul 08, 2024 11:38:25 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5610
Jul 08, 2024 11:38:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5665
something's wrong: no file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala in List[<error>]RangePosition(file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala, 140, 140, 154)
something's wrong: no file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala in List[<error>]RangePosition(file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala, 140, 140, 147)
something's wrong: no file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala in List[<error>]RangePosition(file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala, 140, 140, 149)
something's wrong: no file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala in List[<error>]RangePosition(file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala, 140, 140, 149)
something's wrong: no file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala in List[String]RangePosition(file:///A:/developement/scala%20project/todo/todolist/app/Models/TaskListInMemonryModel.scala, 140, 140, 152)
Jul 08, 2024 11:39:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5959
Jul 08, 2024 11:39:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5964
2024.07.08 11:40:20 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:40:20 INFO  time: compiled root in 0.18s
Jul 08, 2024 11:40:33 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6087
2024.07.08 11:40:38 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:40:38 INFO  time: compiled root in 0.14s
2024.07.08 11:41:03 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:41:03 INFO  time: compiled root in 0.16s
Jul 08, 2024 11:41:12 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6252
2024.07.08 11:41:38 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:41:38 INFO  time: compiled root in 0.16s
2024.07.08 11:41:53 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:41:53 INFO  time: compiled root in 0.16s
2024.07.08 11:42:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:42:07 WARN  javac exited with exit code 1
2024.07.08 11:42:07 INFO  time: compiled root in 2.21s
2024.07.08 11:42:24 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:42:24 INFO  time: compiled root in 0.16s
2024.07.08 11:42:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:42:33 WARN  javac exited with exit code 1
2024.07.08 11:42:33 INFO  time: compiled root in 2.13s
Jul 08, 2024 11:42:36 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6621
2024.07.08 11:42:46 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:42:48 WARN  javac exited with exit code 1
2024.07.08 11:42:48 INFO  time: compiled root in 2.23s
Jul 08, 2024 11:43:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6775
2024.07.08 11:43:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:43:23 WARN  javac exited with exit code 1
2024.07.08 11:43:23 INFO  time: compiled root in 2.07s
Jul 08, 2024 11:45:12 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6788
Jul 08, 2024 11:45:14 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6790
2024.07.08 11:45:20 WARN  Using indexes to guess the definition of validateUser
2024.07.08 11:46:15 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:46:15 INFO  time: compiled root in 0.18s
2024.07.08 11:46:22 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:46:22 INFO  time: compiled root in 0.16s
2024.07.08 11:46:26 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:46:26 INFO  time: compiled root in 0.16s
2024.07.08 11:46:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:46:36 INFO  time: compiled root in 0.16s
Jul 08, 2024 11:46:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7204
2024.07.08 11:46:40 WARN  Using indexes to guess the definition of validateUser
2024.07.08 11:46:53 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:46:53 INFO  time: compiled root in 0.17s
2024.07.08 11:47:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:47:30 WARN  javac exited with exit code 1
2024.07.08 11:47:30 INFO  time: compiled root in 2.2s
Jul 08, 2024 11:47:39 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7383
Jul 08, 2024 11:47:47 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7396
2024.07.08 11:48:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:48:36 INFO  time: compiled root in 0.17s
2024.07.08 11:48:41 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:48:43 WARN  javac exited with exit code 1
2024.07.08 11:48:43 INFO  time: compiled root in 1.92s
Jul 08, 2024 11:49:18 AM scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
Jul 08, 2024 11:49:18 AM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report A:\developement\scala project\todo\.metals\.reports\metals-full\2024-07-08\r_compiler-error_(root)_11-49-18-822.md
2024.07.08 11:49:29 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:49:31 WARN  javac exited with exit code 1
2024.07.08 11:49:31 INFO  time: compiled root in 2.03s
Jul 08, 2024 11:49:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7595
Jul 08, 2024 11:50:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7711
Jul 08, 2024 11:50:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7733
Jul 08, 2024 11:51:02 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7870
2024.07.08 11:51:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:51:18 INFO  time: compiled root in 88ms
Jul 08, 2024 11:51:41 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8002
2024.07.08 11:51:45 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:51:45 INFO  time: compiled root in 84ms
Jul 08, 2024 11:51:48 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8032
2024.07.08 11:52:08 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:52:08 INFO  time: compiled root in 97ms
2024.07.08 11:52:26 WARN  Using indexes to guess the definition of TaskListInMemonryModel
2024.07.08 11:52:26 WARN  Using indexes to guess the definition of createUser
2024.07.08 11:52:26 WARN  Using indexes to guess the definition of createUser
2024.07.08 11:52:42 WARN  Using indexes to guess the definition of Redirect
Jul 08, 2024 11:52:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8323
2024.07.08 11:53:02 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:53:02 INFO  time: compiled root in 86ms
2024.07.08 11:53:11 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:53:11 INFO  time: compiled root in 0.17s
Jul 08, 2024 11:53:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8395
2024.07.08 11:53:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:53:28 INFO  time: compiled root in 0.15s
Jul 08, 2024 11:53:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8426
2024.07.08 11:53:31 WARN  Using indexes to guess the definition of createUser
2024.07.08 11:53:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:53:31 INFO  time: compiled root in 0.15s
2024.07.08 11:53:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:53:45 WARN  javac exited with exit code 1
2024.07.08 11:53:45 INFO  time: compiled root in 1.86s
2024.07.08 11:54:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:54:02 WARN  javac exited with exit code 1
2024.07.08 11:54:02 INFO  time: compiled root in 1.98s
Jul 08, 2024 11:54:05 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8510
2024.07.08 11:54:30 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:54:32 WARN  javac exited with exit code 1
2024.07.08 11:54:32 INFO  time: compiled root in 2.19s
Jul 08, 2024 11:54:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8538
Jul 08, 2024 11:54:38 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8546
2024.07.08 11:54:55 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:54:57 WARN  javac exited with exit code 1
2024.07.08 11:54:57 INFO  time: compiled root in 1.88s
2024.07.08 11:56:37 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:56:37 INFO  time: compiled root in 0.15s
2024.07.08 11:56:42 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:56:44 WARN  javac exited with exit code 1
2024.07.08 11:56:44 INFO  time: compiled root in 1.88s
2024.07.08 11:56:59 WARN  Using indexes to guess the definition of validateLogin1
2024.07.08 11:57:12 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 11:57:14 WARN  javac exited with exit code 1
2024.07.08 11:57:14 INFO  time: compiled root in 2.1s
2024.07.08 13:20:46 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 13:21:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:32:22 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:01 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:02 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:04 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:04 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:33 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:34:36 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:35:27 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:46 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:51 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:52 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:53 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:53 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:55 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:55 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:57 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:58 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:50:59 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:03 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:04 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:04 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:04 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:05 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:06 WARN  Target root A:\developement\scala project\todo\todolist\.bloop\root\bloop-bsp-clients-classes\classes-Metals-v_vVez2VSKS-audUE6L4-w== does not exist
2024.07.08 14:51:07 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 14:51:07 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 14:51:07 INFO  time: Imported build in 0.28s
2024.07.08 14:51:12 INFO  time: indexed workspace in 3.89s
2024.07.08 14:51:50 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.2' (since 42.538s)
2024.07.08 14:51:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:51:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:51:54 WARN  javac exited with exit code 1
2024.07.08 14:51:54 WARN  javac exited with exit code 1
2024.07.08 14:51:54 INFO  time: compiled root in 4.01s
2024.07.08 14:52:10 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:52:12 WARN  javac exited with exit code 1
2024.07.08 14:52:12 INFO  time: compiled root in 2.23s
2024.07.08 14:53:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:53:02 WARN  javac exited with exit code 1
2024.07.08 14:53:02 INFO  time: compiled root in 1.84s
Jul 08, 2024 2:53:08 PM scala.meta.internal.pc.CompletionProvider expected$1
WARNING: offset 320, count -1, length 1673
2024.07.08 14:53:33 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:53:35 WARN  javac exited with exit code 1
2024.07.08 14:53:35 INFO  time: compiled root in 1.99s
2024.07.08 14:53:45 WARN  Using indexes to guess the definition of tasks
2024.07.08 14:53:47 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:53:47 INFO  time: compiled root in 0.18s
Jul 08, 2024 2:54:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9398
Jul 08, 2024 2:54:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9408
Jul 08, 2024 2:54:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9417
2024.07.08 14:54:52 WARN  Using indexes to guess the definition of user
2024.07.08 14:54:53 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:54:53 INFO  time: compiled root in 0.16s
Jul 08, 2024 2:55:05 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9633
2024.07.08 14:55:20 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:55:22 WARN  javac exited with exit code 1
2024.07.08 14:55:22 INFO  time: compiled root in 2.7s
2024.07.08 14:56:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 14:56:02 WARN  javac exited with exit code 1
2024.07.08 14:56:02 INFO  time: compiled root in 2.04s
2024.07.08 17:05:42 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:05:46 WARN  javac exited with exit code 1
2024.07.08 17:05:46 INFO  time: compiled root in 3.27s
2024.07.08 17:06:59 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:07:02 WARN  javac exited with exit code 1
2024.07.08 17:07:02 INFO  time: compiled root in 2.55s
Jul 08, 2024 5:08:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10093
2024.07.08 17:08:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:08:51 WARN  javac exited with exit code 1
2024.07.08 17:08:51 INFO  time: compiled root in 3.41s
Jul 08, 2024 5:09:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10130
2024.07.08 17:09:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:09:20 WARN  javac exited with exit code 1
2024.07.08 17:09:20 INFO  time: compiled root in 2.13s
Jul 08, 2024 5:09:21 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10156
Jul 08, 2024 5:10:23 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10197
Jul 08, 2024 5:10:23 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10199
Jul 08, 2024 5:10:23 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10200
Jul 08, 2024 5:11:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10490
2024.07.08 17:11:19 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:11:19 INFO  time: compiled root in 0.62s
Jul 08, 2024 5:12:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10609
2024.07.08 17:12:14 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:12:14 INFO  time: compiled root in 0.31s
2024.07.08 17:13:01 WARN  Using indexes to guess the definition of taskList
Exception in thread "pool-9-thread-1" Jul 08, 2024 5:13:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10653
java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024.07.08 17:13:02 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:13:02 INFO  time: compiled root in 0.28s
2024.07.08 17:13:33 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:13:33 INFO  time: compiled root in 0.21s
2024.07.08 17:14:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:14:07 WARN  javac exited with exit code 1
2024.07.08 17:14:07 INFO  time: compiled root in 3.48s
2024.07.08 17:15:07 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:15:07 INFO  time: compiled root in 0.21s
2024.07.08 17:15:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:15:28 INFO  time: compiled root in 0.18s
2024.07.08 17:15:45 WARN  Using indexes to guess the definition of tasks
2024.07.08 17:15:46 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:15:46 INFO  time: compiled root in 0.65s
2024.07.08 17:15:47 WARN  Using indexes to guess the definition of user
2024.07.08 17:15:47 WARN  Using indexes to guess the definition of user
2024.07.08 17:15:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:15:48 INFO  time: compiled root in 0.17s
Jul 08, 2024 5:15:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11056
2024.07.08 17:16:07 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:16:10 WARN  javac exited with exit code 1
2024.07.08 17:16:10 INFO  time: compiled root in 2.14s
2024.07.08 17:16:49 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:16:51 WARN  javac exited with exit code 1
2024.07.08 17:16:51 INFO  time: compiled root in 2.02s
2024.07.08 17:17:13 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:17:16 WARN  javac exited with exit code 1
2024.07.08 17:17:16 INFO  time: compiled root in 2.4s
2024.07.08 17:19:27 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:19:29 WARN  javac exited with exit code 1
2024.07.08 17:19:29 INFO  time: compiled root in 2.64s
Jul 08, 2024 5:19:37 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11263
2024.07.08 17:19:46 INFO  scalafmt: excluded A:\developement\scala project\todo\todolist\conf\routes (to format this file, update `project.excludeFilters` in .scalafmt.conf)
Jul 08, 2024 5:19:49 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11333
Jul 08, 2024 5:19:55 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11344
2024.07.08 17:21:10 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:21:13 WARN  javac exited with exit code 1
2024.07.08 17:21:13 INFO  time: compiled root in 2.46s
2024.07.08 17:21:19 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:21:20 WARN  javac exited with exit code 1
2024.07.08 17:21:20 INFO  time: compiled root in 1.89s
Jul 08, 2024 5:28:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11387
Jul 08, 2024 5:28:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11413
2024.07.08 17:30:15 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:30:15 INFO  time: compiled root in 0.64s
2024.07.08 17:30:37 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:30:37 INFO  time: compiled root in 0.3s
2024.07.08 17:30:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:30:48 INFO  time: compiled root in 0.33s
2024.07.08 17:30:58 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:31:00 WARN  javac exited with exit code 1
2024.07.08 17:31:00 INFO  time: compiled root in 2.63s
2024.07.08 17:31:25 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:31:28 WARN  javac exited with exit code 1
2024.07.08 17:31:28 INFO  time: compiled root in 2.09s
2024.07.08 17:32:40 WARN  Using indexes to guess the definition of validateUser
2024.07.08 17:33:08 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:33:11 WARN  javac exited with exit code 1
2024.07.08 17:33:11 INFO  time: compiled root in 2.82s
2024.07.08 17:33:41 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:33:44 WARN  javac exited with exit code 1
2024.07.08 17:33:44 INFO  time: compiled root in 3.31s
2024.07.08 17:34:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:34:48 INFO  time: compiled root in 0.23s
2024.07.08 17:35:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:35:04 INFO  time: compiled root in 0.21s
2024.07.08 17:35:16 INFO  Shutting down server
2024.07.08 17:35:16 INFO  shutting down Metals
2024.07.08 17:35:16 INFO  Shut down connection with build server.
Jul 08, 2024 5:35:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFO: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:135)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:191)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:160)
	at scala.meta.internal.metals.utils.FutureWithTimeout$$anon$1.$anonfun$cancel$1(FutureWithTimeout.scala:37)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:217)
	at scala.meta.internal.metals.utils.FutureWithTimeout$$anon$1.cancel(FutureWithTimeout.scala:37)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.utils.RequestRegistry.cancel(RequestRegistry.scala:94)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:450)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$shutdown$1(BuildServerConnection.scala:182)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$shutdown$1$adapted(BuildServerConnection.scala:174)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:215)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:527)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:123)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:93)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.io.OutputStream.write(OutputStream.java:127)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:151)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 20 more

2024.07.08 17:35:16 INFO  Cancelling compilation on Bloop server
2024.07.08 17:35:16 INFO  Exiting server
2024.07.08 17:35:30 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@52a695fd]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@275d274f]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@52a695fd]
2024.07.08 17:35:33 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 17:35:33 INFO  Attempting to connect to the build server...
2024.07.08 17:35:33 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 17:35:33 INFO  time: Connected to build server in 0.21s
2024.07.08 17:35:33 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 17:35:33 INFO  time: Imported build in 0.2s
2024.07.08 17:35:37 INFO  time: indexed workspace in 3.71s
2024.07.08 17:35:37 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:35:37 INFO  time: compiled root in 0.62s
2024.07.08 17:35:37 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:35:37 INFO  time: compiled root in 0.24s
2024.07.08 17:36:13 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:36:13 INFO  time: compiled root in 0.24s
2024.07.08 17:36:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:36:18 INFO  time: compiled root in 0.22s
2024.07.08 17:36:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:36:36 INFO  time: compiled root in 0.26s
Jul 08, 2024 5:36:48 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 102
Jul 08, 2024 5:36:48 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 101
2024.07.08 17:36:51 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:36:51 INFO  time: compiled root in 0.38s
Jul 08, 2024 5:36:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 136
Jul 08, 2024 5:36:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 137
Jul 08, 2024 5:36:53 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 141
2024.07.08 17:37:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:37:31 INFO  time: compiled root in 0.23s
2024.07.08 17:37:35 WARN  Using indexes to guess the definition of Inject
2024.07.08 17:37:40 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:37:40 INFO  time: compiled root in 0.2s
2024.07.08 17:37:40 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:37:40 INFO  time: compiled root in 0.2s
2024.07.08 17:37:40 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:37:40 INFO  time: compiled root in 0.16s
2024.07.08 17:38:02 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:38:02 INFO  time: compiled root in 0.2s
2024.07.08 17:38:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:38:18 INFO  time: compiled root in 0.2s
2024.07.08 17:38:20 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:38:20 INFO  time: compiled root in 0.23s
2024.07.08 17:38:49 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:38:49 INFO  time: compiled root in 0.2s
2024.07.08 17:38:55 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:38:55 INFO  time: compiled root in 0.19s
Jul 08, 2024 5:39:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 400
2024.07.08 17:39:16 INFO  Shutting down server
2024.07.08 17:39:16 INFO  shutting down Metals
2024.07.08 17:39:16 INFO  Shut down connection with build server.
2024.07.08 17:39:16 INFO  Exiting server
2024.07.08 17:40:18 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@20b03d56]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@2027dfc5]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@20b03d56]
2024.07.08 17:40:18 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 17:40:20 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 17:40:20 INFO  Attempting to connect to the build server...
2024.07.08 17:40:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 17:40:20 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 17:40:20 INFO  time: Connected to build server in 0.56s
2024.07.08 17:40:20 INFO  Connected to Build server: Bloop v1.5.18
Jul 08, 2024 5:40:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2
Jul 08, 2024 5:40:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3
2024.07.08 17:40:20 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 08, 2024 5:40:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6
Jul 08, 2024 5:40:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1
2024.07.08 17:40:20 WARN  no build target for: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala
2024.07.08 17:40:20 INFO  no build target found for A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.08 17:40:20 INFO  time: Imported build in 0.24s
2024.07.08 17:40:25 INFO  time: indexed workspace in 4.39s
2024.07.08 17:40:26 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:40:26 INFO  time: compiled root in 0.79s
2024.07.08 17:40:26 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:40:27 INFO  time: compiled root in 0.4s
2024.07.08 17:40:27 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:40:27 INFO  time: compiled root in 0.23s
2024.07.08 17:40:44 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:40:44 INFO  time: compiled root in 0.25s
2024.07.08 17:40:52 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:40:52 INFO  time: compiled root in 0.21s
Jul 08, 2024 5:41:18 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 52
Jul 08, 2024 5:41:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 62
2024.07.08 17:41:49 INFO  compiling root (12 scala sources and 1 java source)
Jul 08, 2024 5:41:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 161
2024.07.08 17:41:53 INFO  time: compiled root in 3.6s
Jul 08, 2024 5:41:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 194
Jul 08, 2024 5:41:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 198
2024.07.08 17:42:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:42:04 INFO  time: compiled root in 0.28s
2024.07.08 17:42:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:42:28 INFO  time: compiled root in 0.19s
2024.07.08 17:42:57 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:42:57 INFO  time: compiled root in 0.21s
2024.07.08 17:43:12 INFO  Shutting down server
2024.07.08 17:43:12 INFO  shutting down Metals
2024.07.08 17:43:12 INFO  Shut down connection with build server.
2024.07.08 17:43:12 INFO  Exiting server
2024.07.08 17:43:24 INFO  Started: Metals version 1.3.2 in folders 'A:\developement\scala project\todo' for client Visual Studio Code 1.91.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@52a695fd]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@275d274f]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@52a695fd]
2024.07.08 17:43:24 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.08 17:43:25 INFO  Attempting to connect to the build server...
2024.07.08 17:43:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at A:\developement\scala project\todo\.metals\bsp.trace.json or C:\Users\adars\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.08 17:43:25 INFO  time: Connected to build server in 0.19s
2024.07.08 17:43:25 INFO  Connected to Build server: Bloop v1.5.18
2024.07.08 17:43:28 INFO  time: indexed workspace in 3.19s
2024.07.08 17:43:29 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:43:29 INFO  time: compiled root in 0.4s
2024.07.08 17:43:29 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:43:29 INFO  time: compiled root in 0.27s
Jul 08, 2024 5:43:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 33
Jul 08, 2024 5:44:00 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 34
2024.07.08 17:44:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:44:04 INFO  time: compiled root in 0.24s
2024.07.08 17:47:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:47:04 INFO  time: compiled root in 0.75s
2024.07.08 17:47:29 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:47:29 INFO  time: compiled root in 0.27s
2024.07.08 17:48:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:48:31 INFO  time: compiled root in 0.34s
2024.07.08 17:48:34 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:48:34 INFO  time: compiled root in 0.24s
2024.07.08 17:49:06 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:49:06 INFO  time: compiled root in 0.31s
2024.07.08 17:49:45 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:49:45 INFO  time: compiled root in 0.2s
2024.07.08 17:49:56 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:49:56 INFO  time: compiled root in 0.24s
2024.07.08 17:50:18 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:50:21 WARN  javac exited with exit code 1
2024.07.08 17:50:21 INFO  time: compiled root in 3.05s
2024.07.08 17:50:46 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:50:49 WARN  javac exited with exit code 1
2024.07.08 17:50:49 INFO  time: compiled root in 2.63s
2024.07.08 17:55:23 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:55:26 WARN  javac exited with exit code 1
2024.07.08 17:55:26 INFO  time: compiled root in 3.67s
2024.07.08 17:56:34 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 17:56:37 WARN  javac exited with exit code 1
2024.07.08 17:56:37 INFO  time: compiled root in 2.42s
Jul 08, 2024 5:57:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 318
2024.07.08 18:00:24 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:00:28 WARN  javac exited with exit code 1
2024.07.08 18:00:28 INFO  time: compiled root in 3.46s
Jul 08, 2024 6:42:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 369
Jul 08, 2024 6:42:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 371
2024.07.08 18:42:22 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:42:24 INFO  time: compiled root in 1.44s
2024.07.08 18:42:24 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:42:24 INFO  time: compiled root in 0.26s
2024.07.08 18:42:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:42:28 INFO  time: compiled root in 0.35s
2024.07.08 18:42:54 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:42:56 WARN  javac exited with exit code 1
2024.07.08 18:42:56 INFO  time: compiled root in 2.68s
2024.07.08 18:44:01 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:44:03 WARN  javac exited with exit code 1
2024.07.08 18:44:03 INFO  time: compiled root in 2.38s
2024.07.08 18:47:07 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:47:10 WARN  javac exited with exit code 1
2024.07.08 18:47:10 INFO  time: compiled root in 2.2s
2024.07.08 18:47:22 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:47:22 INFO  time: compiled root in 0.15s
2024.07.08 18:47:42 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:47:45 WARN  javac exited with exit code 1
2024.07.08 18:47:45 INFO  time: compiled root in 2.39s
2024.07.08 18:49:52 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:49:55 WARN  javac exited with exit code 1
2024.07.08 18:49:55 INFO  time: compiled root in 2.5s
2024.07.08 18:51:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:51:00 INFO  time: compiled root in 0.29s
2024.07.08 18:54:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:54:50 INFO  time: compiled root in 0.37s
Exception in thread "pool-4-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Jul 08, 2024 6:55:47 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1080
Jul 08, 2024 6:56:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1094
2024.07.08 18:56:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:56:26 WARN  javac exited with exit code 1
2024.07.08 18:56:26 INFO  time: compiled root in 4.66s
2024.07.08 18:56:55 WARN  Using indexes to guess the definition of String
2024.07.08 18:57:02 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:57:04 WARN  javac exited with exit code 1
2024.07.08 18:57:04 INFO  time: compiled root in 2.14s
Jul 08, 2024 6:57:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1146
2024.07.08 18:57:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:57:43 INFO  time: compiled root in 0.15s
2024.07.08 18:58:54 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 18:58:54 INFO  time: compiled root in 0.2s
Exception in thread "pool-4-thread-2" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:243)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024.07.08 19:00:10 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:00:10 INFO  time: compiled root in 0.2s
2024.07.08 19:00:14 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:00:14 INFO  time: compiled root in 0.17s
Jul 08, 2024 7:00:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1735
2024.07.08 19:00:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:00:48 INFO  time: compiled root in 0.19s
2024.07.08 19:01:09 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:01:09 INFO  time: compiled root in 0.12s
2024.07.08 19:01:16 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:01:16 INFO  time: compiled root in 0.24s
2024.07.08 19:01:54 WARN  Using indexes to guess the definition of tasks
2024.07.08 19:01:57 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:01:57 INFO  time: compiled root in 0.17s
2024.07.08 19:02:09 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:02:09 INFO  time: compiled root in 0.17s
2024.07.08 19:02:20 WARN  Using indexes to guess the definition of tasks
Jul 08, 2024 7:02:26 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2136
2024.07.08 19:02:26 INFO  Report absolute-path: ### java.nio.file.NoSuchFileException: C:\Users\adars\AppData\Local\Coursier\cache\arc\https\github.com\adoptium\temurin17-binaries\releases\download\jdk-17%2B35\OpenJDK17-jdk_x64_windows_hotspot_17_35.zip\jdk-17 35\lib\src.zip

Uri: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17+35/lib/src.zip!/java.base/java/lang/Object.java


#### Error stacktrace:

```
jdk.zipfs/jdk.nio.zipfs.ZipFileSystem.<init>(ZipFileSystem.java:161)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.getZipFileSystem(ZipFileSystemProvider.java:125)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.newFileSystem(ZipFileSystemProvider.java:106)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:339)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:288)
	scala.meta.internal.io.PlatformFileIO$.newFileSystem(PlatformFileIO.scala:90)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:126)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$4(MtagsEnrichments.scala:181)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:162)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:181)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 08, 2024 7:02:26 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\n\n/**\n * Class {@code Object} is the root of the class hierarchy.\n * Every class has {@code Object} as a superclass. All objects,\n * including arrays, implement the methods of this class.\n *\n * @see     java.lang.Class\n * @since   1.0\n */\npublic class Object {\n\n    /**\n     * Constructs a new object.\n     */\n    @IntrinsicCandidate\n    public Object() {}\n\n    /**\n     * Returns the runtime class of this {@code Object}. The returned\n     * {@code Class} object is the object that is locked by {@code\n     * static synchronized} methods of the represented class.\n     *\n     * \u003cp\u003e\u003cb\u003eThe actual result type is {@code Class\u003c? extends |X|\u003e}\n     * where {@code |X|} is the erasure of the static type of the\n     * expression on which {@code getClass} is called.\u003c/b\u003e For\n     * example, no cast is required in this code fragment:\u003c/p\u003e\n     *\n     * \u003cp\u003e\n     * {@code Number n \u003d 0;                             }\u003cbr\u003e\n     * {@code Class\u003c? extends Number\u003e c \u003d n.getClass(); }\n     * \u003c/p\u003e\n     *\n     * @return The {@code Class} object that represents the runtime\n     *         class of this object.\n     * @jls 15.8.2 Class Literals\n     */\n    @IntrinsicCandidate\n    public final native Class\u003c?\u003e getClass();\n\n    /**\n     * Returns a hash code value for the object. This method is\n     * supported for the benefit of hash tables such as those provided by\n     * {@link java.util.HashMap}.\n     * \u003cp\u003e\n     * The general contract of {@code hashCode} is:\n     * \u003cul\u003e\n     * \u003cli\u003eWhenever it is invoked on the same object more than once during\n     *     an execution of a Java application, the {@code hashCode} method\n     *     must consistently return the same integer, provided no information\n     *     used in {@code equals} comparisons on the object is modified.\n     *     This integer need not remain consistent from one execution of an\n     *     application to another execution of the same application.\n     * \u003cli\u003eIf two objects are equal according to the {@link\n     *     equals(Object) equals} method, then calling the {@code\n     *     hashCode} method on each of the two objects must produce the\n     *     same integer result.\n     * \u003cli\u003eIt is \u003cem\u003enot\u003c/em\u003e required that if two objects are unequal\n     *     according to the {@link equals(Object) equals} method, then\n     *     calling the {@code hashCode} method on each of the two objects\n     *     must produce distinct integer results.  However, the programmer\n     *     should be aware that producing distinct integer results for\n     *     unequal objects may improve the performance of hash tables.\n     * \u003c/ul\u003e\n     *\n     * @implSpec\n     * As far as is reasonably practical, the {@code hashCode} method defined\n     * by class {@code Object} returns distinct integers for distinct objects.\n     *\n     * @return  a hash code value for this object.\n     * @see     java.lang.Object#equals(java.lang.Object)\n     * @see     java.lang.System#identityHashCode\n     */\n    @IntrinsicCandidate\n    public native int hashCode();\n\n    /**\n     * Indicates whether some other object is \"equal to\" this one.\n     * \u003cp\u003e\n     * The {@code equals} method implements an equivalence relation\n     * on non-null object references:\n     * \u003cul\u003e\n     * \u003cli\u003eIt is \u003ci\u003ereflexive\u003c/i\u003e: for any non-null reference value\n     *     {@code x}, {@code x.equals(x)} should return\n     *     {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003esymmetric\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, {@code x.equals(y)}\n     *     should return {@code true} if and only if\n     *     {@code y.equals(x)} returns {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003etransitive\u003c/i\u003e: for any non-null reference values\n     *     {@code x}, {@code y}, and {@code z}, if\n     *     {@code x.equals(y)} returns {@code true} and\n     *     {@code y.equals(z)} returns {@code true}, then\n     *     {@code x.equals(z)} should return {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003econsistent\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, multiple invocations of\n     *     {@code x.equals(y)} consistently return {@code true}\n     *     or consistently return {@code false}, provided no\n     *     information used in {@code equals} comparisons on the\n     *     objects is modified.\n     * \u003cli\u003eFor any non-null reference value {@code x},\n     *     {@code x.equals(null)} should return {@code false}.\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * An equivalence relation partitions the elements it operates on\n     * into \u003ci\u003eequivalence classes\u003c/i\u003e; all the members of an\n     * equivalence class are equal to each other. Members of an\n     * equivalence class are substitutable for each other, at least\n     * for some purposes.\n     *\n     * @implSpec\n     * The {@code equals} method for class {@code Object} implements\n     * the most discriminating possible equivalence relation on objects;\n     * that is, for any non-null reference values {@code x} and\n     * {@code y}, this method returns {@code true} if and only\n     * if {@code x} and {@code y} refer to the same object\n     * ({@code x \u003d\u003d y} has the value {@code true}).\n     *\n     * In other words, under the reference equality equivalence\n     * relation, each equivalence class only has a single element.\n     *\n     * @apiNote\n     * It is generally necessary to override the {@link hashCode hashCode}\n     * method whenever this method is overridden, so as to maintain the\n     * general contract for the {@code hashCode} method, which states\n     * that equal objects must have equal hash codes.\n     *\n     * @param   obj   the reference object with which to compare.\n     * @return  {@code true} if this object is the same as the obj\n     *          argument; {@code false} otherwise.\n     * @see     #hashCode()\n     * @see     java.util.HashMap\n     */\n    public boolean equals(Object obj) {\n        return (this \u003d\u003d obj);\n    }\n\n    /**\n     * Creates and returns a copy of this object.  The precise meaning\n     * of \"copy\" may depend on the class of the object. The general\n     * intent is that, for any object {@code x}, the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone() !\u003d x\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be true, and that the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().getClass() \u003d\u003d x.getClass()\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, but these are not absolute requirements.\n     * While it is typically the case that:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().equals(x)\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, this is not an absolute requirement.\n     * \u003cp\u003e\n     * By convention, the returned object should be obtained by calling\n     * {@code super.clone}.  If a class and all of its superclasses (except\n     * {@code Object}) obey this convention, it will be the case that\n     * {@code x.clone().getClass() \u003d\u003d x.getClass()}.\n     * \u003cp\u003e\n     * By convention, the object returned by this method should be independent\n     * of this object (which is being cloned).  To achieve this independence,\n     * it may be necessary to modify one or more fields of the object returned\n     * by {@code super.clone} before returning it.  Typically, this means\n     * copying any mutable objects that comprise the internal \"deep structure\"\n     * of the object being cloned and replacing the references to these\n     * objects with references to the copies.  If a class contains only\n     * primitive fields or references to immutable objects, then it is usually\n     * the case that no fields in the object returned by {@code super.clone}\n     * need to be modified.\n     *\n     * @implSpec\n     * The method {@code clone} for class {@code Object} performs a\n     * specific cloning operation. First, if the class of this object does\n     * not implement the interface {@code Cloneable}, then a\n     * {@code CloneNotSupportedException} is thrown. Note that all arrays\n     * are considered to implement the interface {@code Cloneable} and that\n     * the return type of the {@code clone} method of an array type {@code T[]}\n     * is {@code T[]} where T is any reference or primitive type.\n     * Otherwise, this method creates a new instance of the class of this\n     * object and initializes all its fields with exactly the contents of\n     * the corresponding fields of this object, as if by assignment; the\n     * contents of the fields are not themselves cloned. Thus, this method\n     * performs a \"shallow copy\" of this object, not a \"deep copy\" operation.\n     * \u003cp\u003e\n     * The class {@code Object} does not itself implement the interface\n     * {@code Cloneable}, so calling the {@code clone} method on an object\n     * whose class is {@code Object} will result in throwing an\n     * exception at run time.\n     *\n     * @return     a clone of this instance.\n     * @throws  CloneNotSupportedException  if the object\u0027s class does not\n     *               support the {@code Cloneable} interface. Subclasses\n     *               that override the {@code clone} method can also\n     *               throw this exception to indicate that an instance cannot\n     *               be cloned.\n     * @see java.lang.Cloneable\n     */\n    @IntrinsicCandidate\n    protected native Object clone() throws CloneNotSupportedException;\n\n    /**\n     * Returns a string representation of the object.\n     * @apiNote\n     * In general, the\n     * {@code toString} method returns a string that\n     * \"textually represents\" this object. The result should\n     * be a concise but informative representation that is easy for a\n     * person to read.\n     * It is recommended that all subclasses override this method.\n     * The string output is not necessarily stable over time or across\n     * JVM invocations.\n     * @implSpec\n     * The {@code toString} method for class {@code Object}\n     * returns a string consisting of the name of the class of which the\n     * object is an instance, the at-sign character `{@code @}\u0027, and\n     * the unsigned hexadecimal representation of the hash code of the\n     * object. In other words, this method returns a string equal to the\n     * value of:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @return  a string representation of the object.\n     */\n    public String toString() {\n        return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n    }\n\n    /**\n     * Wakes up a single thread that is waiting on this object\u0027s\n     * monitor. If any threads are waiting on this object, one of them\n     * is chosen to be awakened. The choice is arbitrary and occurs at\n     * the discretion of the implementation. A thread waits on an object\u0027s\n     * monitor by calling one of the {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened thread will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened thread will\n     * compete in the usual manner with any other threads that might be\n     * actively competing to synchronize on this object; for example, the\n     * awakened thread enjoys no reliable privilege or disadvantage in being\n     * the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. A thread becomes the owner of the\n     * object\u0027s monitor in one of three ways:\n     * \u003cul\u003e\n     * \u003cli\u003eBy executing a synchronized instance method of that object.\n     * \u003cli\u003eBy executing the body of a {@code synchronized} statement\n     *     that synchronizes on the object.\n     * \u003cli\u003eFor objects of type {@code Class,} by executing a\n     *     synchronized static method of that class.\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * Only one thread at a time can own an object\u0027s monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notifyAll()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notify();\n\n    /**\n     * Wakes up all threads that are waiting on this object\u0027s monitor. A\n     * thread waits on an object\u0027s monitor by calling one of the\n     * {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened threads will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened threads\n     * will compete in the usual manner with any other threads that might\n     * be actively competing to synchronize on this object; for example,\n     * the awakened threads enjoy no reliable privilege or disadvantage in\n     * being the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. See the {@code notify} method for a\n     * description of the ways in which a thread can become the owner of\n     * a monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notify()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notifyAll();\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(0L, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait(long)\n     * @see    #wait(long, int)\n     */\n    public final void wait() throws InterruptedException {\n        wait(0L);\n    }\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(timeoutMillis, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long, int)\n     */\n    public final native void wait(long timeoutMillis) throws InterruptedException;\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * The current thread must own this object\u0027s monitor lock. See the\n     * {@link #notify notify} method for a description of the ways in which\n     * a thread can become the owner of a monitor lock.\n     * \u003cp\u003e\n     * This method causes the current thread (referred to here as \u003cvar\u003eT\u003c/var\u003e) to\n     * place itself in the wait set for this object and then to relinquish any\n     * and all synchronization claims on this object. Note that only the locks\n     * on this object are relinquished; any other objects on which the current\n     * thread may be synchronized remain locked while the thread waits.\n     * \u003cp\u003e\n     * Thread \u003cvar\u003eT\u003c/var\u003e then becomes disabled for thread scheduling purposes\n     * and lies dormant until one of the following occurs:\n     * \u003cul\u003e\n     * \u003cli\u003eSome other thread invokes the {@code notify} method for this\n     * object and thread \u003cvar\u003eT\u003c/var\u003e happens to be arbitrarily chosen as\n     * the thread to be awakened.\n     * \u003cli\u003eSome other thread invokes the {@code notifyAll} method for this\n     * object.\n     * \u003cli\u003eSome other thread {@linkplain Thread#interrupt() interrupts}\n     * thread \u003cvar\u003eT\u003c/var\u003e.\n     * \u003cli\u003eThe specified amount of real time has elapsed, more or less.\n     * The amount of real time, in nanoseconds, is given by the expression\n     * {@code 1000000 * timeoutMillis + nanos}. If {@code timeoutMillis} and {@code nanos}\n     * are both zero, then real time is not taken into consideration and the\n     * thread waits until awakened by one of the other causes.\n     * \u003cli\u003eThread \u003cvar\u003eT\u003c/var\u003e is awakened spuriously. (See below.)\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * The thread \u003cvar\u003eT\u003c/var\u003e is then removed from the wait set for this\n     * object and re-enabled for thread scheduling. It competes in the\n     * usual manner with other threads for the right to synchronize on the\n     * object; once it has regained control of the object, all its\n     * synchronization claims on the object are restored to the status quo\n     * ante - that is, to the situation as of the time that the {@code wait}\n     * method was invoked. Thread \u003cvar\u003eT\u003c/var\u003e then returns from the\n     * invocation of the {@code wait} method. Thus, on return from the\n     * {@code wait} method, the synchronization state of the object and of\n     * thread {@code T} is exactly as it was when the {@code wait} method\n     * was invoked.\n     * \u003cp\u003e\n     * A thread can wake up without being notified, interrupted, or timing out, a\n     * so-called \u003cem\u003espurious wakeup\u003c/em\u003e.  While this will rarely occur in practice,\n     * applications must guard against it by testing for the condition that should\n     * have caused the thread to be awakened, and continuing to wait if the condition\n     * is not satisfied. See the example below.\n     * \u003cp\u003e\n     * For more information on this topic, see section 14.2,\n     * \"Condition Queues,\" in Brian Goetz and others\u0027 \u003cem\u003eJava Concurrency\n     * in Practice\u003c/em\u003e (Addison-Wesley, 2006) or Item 69 in Joshua\n     * Bloch\u0027s \u003cem\u003eEffective Java, Second Edition\u003c/em\u003e (Addison-Wesley,\n     * 2008).\n     * \u003cp\u003e\n     * If the current thread is {@linkplain java.lang.Thread#interrupt() interrupted}\n     * by any thread before or while it is waiting, then an {@code InterruptedException}\n     * is thrown.  The \u003cem\u003einterrupted status\u003c/em\u003e of the current thread is cleared when\n     * this exception is thrown. This exception is not thrown until the lock status of\n     * this object has been restored as described above.\n     *\n     * @apiNote\n     * The recommended approach to waiting is to check the condition being awaited in\n     * a {@code while} loop around the call to {@code wait}, as shown in the example\n     * below. Among other things, this approach avoids problems that can be caused\n     * by spurious wakeups.\n     *\n     * \u003cpre\u003e{@code\n     *     synchronized (obj) {\n     *         while (\u003ccondition does not hold\u003e and \u003ctimeout not exceeded\u003e) {\n     *             long timeoutMillis \u003d ... ; // recompute timeout values\n     *             int nanos \u003d ... ;\n     *             obj.wait(timeoutMillis, nanos);\n     *         }\n     *         ... // Perform action appropriate to condition or timeout\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @param  nanos   additional time, in nanoseconds, in the range 0-999999 inclusive\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative,\n     *         or if the value of {@code nanos} is out of range\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long)\n     */\n    public final void wait(long timeoutMillis, int nanos) throws InterruptedException {\n        if (timeoutMillis \u003c 0) {\n            throw new IllegalArgumentException(\"timeoutMillis value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 timeoutMillis \u003c Long.MAX_VALUE) {\n            timeoutMillis++;\n        }\n\n        wait(timeoutMillis);\n    }\n\n    /**\n     * Called by the garbage collector on an object when garbage collection\n     * determines that there are no more references to the object.\n     * A subclass overrides the {@code finalize} method to dispose of\n     * system resources or to perform other cleanup.\n     * \u003cp\u003e\n     * The general contract of {@code finalize} is that it is invoked\n     * if and when the Java virtual\n     * machine has determined that there is no longer any\n     * means by which this object can be accessed by any thread that has\n     * not yet died, except as a result of an action taken by the\n     * finalization of some other object or class which is ready to be\n     * finalized. The {@code finalize} method may take any action, including\n     * making this object available again to other threads; the usual purpose\n     * of {@code finalize}, however, is to perform cleanup actions before\n     * the object is irrevocably discarded. For example, the finalize method\n     * for an object that represents an input/output connection might perform\n     * explicit I/O transactions to break the connection before the object is\n     * permanently discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method of class {@code Object} performs no\n     * special action; it simply returns normally. Subclasses of\n     * {@code Object} may override this definition.\n     * \u003cp\u003e\n     * The Java programming language does not guarantee which thread will\n     * invoke the {@code finalize} method for any given object. It is\n     * guaranteed, however, that the thread that invokes finalize will not\n     * be holding any user-visible synchronization locks when finalize is\n     * invoked. If an uncaught exception is thrown by the finalize method,\n     * the exception is ignored and finalization of that object terminates.\n     * \u003cp\u003e\n     * After the {@code finalize} method has been invoked for an object, no\n     * further action is taken until the Java virtual machine has again\n     * determined that there is no longer any means by which this object can\n     * be accessed by any thread that has not yet died, including possible\n     * actions by other objects or classes which are ready to be finalized,\n     * at which point the object may be discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method is never invoked more than once by a Java\n     * virtual machine for any given object.\n     * \u003cp\u003e\n     * Any exception thrown by the {@code finalize} method causes\n     * the finalization of this object to be halted, but is otherwise\n     * ignored.\n     *\n     * @apiNote\n     * Classes that embed non-heap resources have many options\n     * for cleanup of those resources. The class must ensure that the\n     * lifetime of each instance is longer than that of any resource it embeds.\n     * {@link java.lang.ref.Reference#reachabilityFence} can be used to ensure that\n     * objects remain reachable while resources embedded in the object are in use.\n     * \u003cp\u003e\n     * A subclass should avoid overriding the {@code finalize} method\n     * unless the subclass embeds non-heap resources that must be cleaned up\n     * before the instance is collected.\n     * Finalizer invocations are not automatically chained, unlike constructors.\n     * If a subclass overrides {@code finalize} it must invoke the superclass\n     * finalizer explicitly.\n     * To guard against exceptions prematurely terminating the finalize chain,\n     * the subclass should use a {@code try-finally} block to ensure\n     * {@code super.finalize()} is always invoked. For example,\n     * \u003cpre\u003e{@code      @Override\n     *     protected void finalize() throws Throwable {\n     *         try {\n     *             ... // cleanup subclass state\n     *         } finally {\n     *             super.finalize();\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @deprecated The finalization mechanism is inherently problematic.\n     * Finalization can lead to performance issues, deadlocks, and hangs.\n     * Errors in finalizers can lead to resource leaks; there is no way to cancel\n     * finalization if it is no longer necessary; and no ordering is specified\n     * among calls to {@code finalize} methods of different objects.\n     * Furthermore, there are no guarantees regarding the timing of finalization.\n     * The {@code finalize} method might be called on a finalizable object\n     * only after an indefinite delay, if at all.\n     *\n     * Classes whose instances hold non-heap resources should provide a method\n     * to enable explicit release of those resources, and they should also\n     * implement {@link AutoCloseable} if appropriate.\n     * The {@link java.lang.ref.Cleaner} and {@link java.lang.ref.PhantomReference}\n     * provide more flexible and efficient ways to release resources when an object\n     * becomes unreachable.\n     *\n     * @throws Throwable the {@code Exception} raised by this method\n     * @see java.lang.ref.WeakReference\n     * @see java.lang.ref.PhantomReference\n     * @jls 12.6 Finalization of Class Instances\n     */\n    @Deprecated(since\u003d\"9\")\n    protected void finalize() throws Throwable { }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 08, 2024 7:02:26 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 08, 2024 7:02:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2141
Jul 08, 2024 7:02:31 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2186
Jul 08, 2024 7:02:31 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2185
2024.07.08 19:02:34 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:02:34 INFO  time: compiled root in 0.21s
2024.07.08 19:03:06 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:03:09 WARN  javac exited with exit code 1
2024.07.08 19:03:09 INFO  time: compiled root in 2.39s
2024.07.08 19:04:02 WARN  Using indexes to guess the definition of user
2024.07.08 19:04:06 INFO  Report absolute-path: ### java.nio.file.NoSuchFileException: C:\Users\adars\AppData\Local\Coursier\cache\arc\https\github.com\adoptium\temurin17-binaries\releases\download\jdk-17%2B35\OpenJDK17-jdk_x64_windows_hotspot_17_35.zip\jdk-17 35\lib\src.zip

Uri: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17+35/lib/src.zip!/java.base/java/lang/Object.java


#### Error stacktrace:

```
jdk.zipfs/jdk.nio.zipfs.ZipFileSystem.<init>(ZipFileSystem.java:161)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.getZipFileSystem(ZipFileSystemProvider.java:125)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.newFileSystem(ZipFileSystemProvider.java:106)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:339)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:288)
	scala.meta.internal.io.PlatformFileIO$.newFileSystem(PlatformFileIO.scala:90)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:126)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$4(MtagsEnrichments.scala:181)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:162)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:181)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 08, 2024 7:04:06 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\n\n/**\n * Class {@code Object} is the root of the class hierarchy.\n * Every class has {@code Object} as a superclass. All objects,\n * including arrays, implement the methods of this class.\n *\n * @see     java.lang.Class\n * @since   1.0\n */\npublic class Object {\n\n    /**\n     * Constructs a new object.\n     */\n    @IntrinsicCandidate\n    public Object() {}\n\n    /**\n     * Returns the runtime class of this {@code Object}. The returned\n     * {@code Class} object is the object that is locked by {@code\n     * static synchronized} methods of the represented class.\n     *\n     * \u003cp\u003e\u003cb\u003eThe actual result type is {@code Class\u003c? extends |X|\u003e}\n     * where {@code |X|} is the erasure of the static type of the\n     * expression on which {@code getClass} is called.\u003c/b\u003e For\n     * example, no cast is required in this code fragment:\u003c/p\u003e\n     *\n     * \u003cp\u003e\n     * {@code Number n \u003d 0;                             }\u003cbr\u003e\n     * {@code Class\u003c? extends Number\u003e c \u003d n.getClass(); }\n     * \u003c/p\u003e\n     *\n     * @return The {@code Class} object that represents the runtime\n     *         class of this object.\n     * @jls 15.8.2 Class Literals\n     */\n    @IntrinsicCandidate\n    public final native Class\u003c?\u003e getClass();\n\n    /**\n     * Returns a hash code value for the object. This method is\n     * supported for the benefit of hash tables such as those provided by\n     * {@link java.util.HashMap}.\n     * \u003cp\u003e\n     * The general contract of {@code hashCode} is:\n     * \u003cul\u003e\n     * \u003cli\u003eWhenever it is invoked on the same object more than once during\n     *     an execution of a Java application, the {@code hashCode} method\n     *     must consistently return the same integer, provided no information\n     *     used in {@code equals} comparisons on the object is modified.\n     *     This integer need not remain consistent from one execution of an\n     *     application to another execution of the same application.\n     * \u003cli\u003eIf two objects are equal according to the {@link\n     *     equals(Object) equals} method, then calling the {@code\n     *     hashCode} method on each of the two objects must produce the\n     *     same integer result.\n     * \u003cli\u003eIt is \u003cem\u003enot\u003c/em\u003e required that if two objects are unequal\n     *     according to the {@link equals(Object) equals} method, then\n     *     calling the {@code hashCode} method on each of the two objects\n     *     must produce distinct integer results.  However, the programmer\n     *     should be aware that producing distinct integer results for\n     *     unequal objects may improve the performance of hash tables.\n     * \u003c/ul\u003e\n     *\n     * @implSpec\n     * As far as is reasonably practical, the {@code hashCode} method defined\n     * by class {@code Object} returns distinct integers for distinct objects.\n     *\n     * @return  a hash code value for this object.\n     * @see     java.lang.Object#equals(java.lang.Object)\n     * @see     java.lang.System#identityHashCode\n     */\n    @IntrinsicCandidate\n    public native int hashCode();\n\n    /**\n     * Indicates whether some other object is \"equal to\" this one.\n     * \u003cp\u003e\n     * The {@code equals} method implements an equivalence relation\n     * on non-null object references:\n     * \u003cul\u003e\n     * \u003cli\u003eIt is \u003ci\u003ereflexive\u003c/i\u003e: for any non-null reference value\n     *     {@code x}, {@code x.equals(x)} should return\n     *     {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003esymmetric\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, {@code x.equals(y)}\n     *     should return {@code true} if and only if\n     *     {@code y.equals(x)} returns {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003etransitive\u003c/i\u003e: for any non-null reference values\n     *     {@code x}, {@code y}, and {@code z}, if\n     *     {@code x.equals(y)} returns {@code true} and\n     *     {@code y.equals(z)} returns {@code true}, then\n     *     {@code x.equals(z)} should return {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003econsistent\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, multiple invocations of\n     *     {@code x.equals(y)} consistently return {@code true}\n     *     or consistently return {@code false}, provided no\n     *     information used in {@code equals} comparisons on the\n     *     objects is modified.\n     * \u003cli\u003eFor any non-null reference value {@code x},\n     *     {@code x.equals(null)} should return {@code false}.\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * An equivalence relation partitions the elements it operates on\n     * into \u003ci\u003eequivalence classes\u003c/i\u003e; all the members of an\n     * equivalence class are equal to each other. Members of an\n     * equivalence class are substitutable for each other, at least\n     * for some purposes.\n     *\n     * @implSpec\n     * The {@code equals} method for class {@code Object} implements\n     * the most discriminating possible equivalence relation on objects;\n     * that is, for any non-null reference values {@code x} and\n     * {@code y}, this method returns {@code true} if and only\n     * if {@code x} and {@code y} refer to the same object\n     * ({@code x \u003d\u003d y} has the value {@code true}).\n     *\n     * In other words, under the reference equality equivalence\n     * relation, each equivalence class only has a single element.\n     *\n     * @apiNote\n     * It is generally necessary to override the {@link hashCode hashCode}\n     * method whenever this method is overridden, so as to maintain the\n     * general contract for the {@code hashCode} method, which states\n     * that equal objects must have equal hash codes.\n     *\n     * @param   obj   the reference object with which to compare.\n     * @return  {@code true} if this object is the same as the obj\n     *          argument; {@code false} otherwise.\n     * @see     #hashCode()\n     * @see     java.util.HashMap\n     */\n    public boolean equals(Object obj) {\n        return (this \u003d\u003d obj);\n    }\n\n    /**\n     * Creates and returns a copy of this object.  The precise meaning\n     * of \"copy\" may depend on the class of the object. The general\n     * intent is that, for any object {@code x}, the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone() !\u003d x\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be true, and that the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().getClass() \u003d\u003d x.getClass()\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, but these are not absolute requirements.\n     * While it is typically the case that:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().equals(x)\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, this is not an absolute requirement.\n     * \u003cp\u003e\n     * By convention, the returned object should be obtained by calling\n     * {@code super.clone}.  If a class and all of its superclasses (except\n     * {@code Object}) obey this convention, it will be the case that\n     * {@code x.clone().getClass() \u003d\u003d x.getClass()}.\n     * \u003cp\u003e\n     * By convention, the object returned by this method should be independent\n     * of this object (which is being cloned).  To achieve this independence,\n     * it may be necessary to modify one or more fields of the object returned\n     * by {@code super.clone} before returning it.  Typically, this means\n     * copying any mutable objects that comprise the internal \"deep structure\"\n     * of the object being cloned and replacing the references to these\n     * objects with references to the copies.  If a class contains only\n     * primitive fields or references to immutable objects, then it is usually\n     * the case that no fields in the object returned by {@code super.clone}\n     * need to be modified.\n     *\n     * @implSpec\n     * The method {@code clone} for class {@code Object} performs a\n     * specific cloning operation. First, if the class of this object does\n     * not implement the interface {@code Cloneable}, then a\n     * {@code CloneNotSupportedException} is thrown. Note that all arrays\n     * are considered to implement the interface {@code Cloneable} and that\n     * the return type of the {@code clone} method of an array type {@code T[]}\n     * is {@code T[]} where T is any reference or primitive type.\n     * Otherwise, this method creates a new instance of the class of this\n     * object and initializes all its fields with exactly the contents of\n     * the corresponding fields of this object, as if by assignment; the\n     * contents of the fields are not themselves cloned. Thus, this method\n     * performs a \"shallow copy\" of this object, not a \"deep copy\" operation.\n     * \u003cp\u003e\n     * The class {@code Object} does not itself implement the interface\n     * {@code Cloneable}, so calling the {@code clone} method on an object\n     * whose class is {@code Object} will result in throwing an\n     * exception at run time.\n     *\n     * @return     a clone of this instance.\n     * @throws  CloneNotSupportedException  if the object\u0027s class does not\n     *               support the {@code Cloneable} interface. Subclasses\n     *               that override the {@code clone} method can also\n     *               throw this exception to indicate that an instance cannot\n     *               be cloned.\n     * @see java.lang.Cloneable\n     */\n    @IntrinsicCandidate\n    protected native Object clone() throws CloneNotSupportedException;\n\n    /**\n     * Returns a string representation of the object.\n     * @apiNote\n     * In general, the\n     * {@code toString} method returns a string that\n     * \"textually represents\" this object. The result should\n     * be a concise but informative representation that is easy for a\n     * person to read.\n     * It is recommended that all subclasses override this method.\n     * The string output is not necessarily stable over time or across\n     * JVM invocations.\n     * @implSpec\n     * The {@code toString} method for class {@code Object}\n     * returns a string consisting of the name of the class of which the\n     * object is an instance, the at-sign character `{@code @}\u0027, and\n     * the unsigned hexadecimal representation of the hash code of the\n     * object. In other words, this method returns a string equal to the\n     * value of:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @return  a string representation of the object.\n     */\n    public String toString() {\n        return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n    }\n\n    /**\n     * Wakes up a single thread that is waiting on this object\u0027s\n     * monitor. If any threads are waiting on this object, one of them\n     * is chosen to be awakened. The choice is arbitrary and occurs at\n     * the discretion of the implementation. A thread waits on an object\u0027s\n     * monitor by calling one of the {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened thread will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened thread will\n     * compete in the usual manner with any other threads that might be\n     * actively competing to synchronize on this object; for example, the\n     * awakened thread enjoys no reliable privilege or disadvantage in being\n     * the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. A thread becomes the owner of the\n     * object\u0027s monitor in one of three ways:\n     * \u003cul\u003e\n     * \u003cli\u003eBy executing a synchronized instance method of that object.\n     * \u003cli\u003eBy executing the body of a {@code synchronized} statement\n     *     that synchronizes on the object.\n     * \u003cli\u003eFor objects of type {@code Class,} by executing a\n     *     synchronized static method of that class.\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * Only one thread at a time can own an object\u0027s monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notifyAll()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notify();\n\n    /**\n     * Wakes up all threads that are waiting on this object\u0027s monitor. A\n     * thread waits on an object\u0027s monitor by calling one of the\n     * {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened threads will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened threads\n     * will compete in the usual manner with any other threads that might\n     * be actively competing to synchronize on this object; for example,\n     * the awakened threads enjoy no reliable privilege or disadvantage in\n     * being the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. See the {@code notify} method for a\n     * description of the ways in which a thread can become the owner of\n     * a monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notify()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notifyAll();\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(0L, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait(long)\n     * @see    #wait(long, int)\n     */\n    public final void wait() throws InterruptedException {\n        wait(0L);\n    }\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(timeoutMillis, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long, int)\n     */\n    public final native void wait(long timeoutMillis) throws InterruptedException;\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * The current thread must own this object\u0027s monitor lock. See the\n     * {@link #notify notify} method for a description of the ways in which\n     * a thread can become the owner of a monitor lock.\n     * \u003cp\u003e\n     * This method causes the current thread (referred to here as \u003cvar\u003eT\u003c/var\u003e) to\n     * place itself in the wait set for this object and then to relinquish any\n     * and all synchronization claims on this object. Note that only the locks\n     * on this object are relinquished; any other objects on which the current\n     * thread may be synchronized remain locked while the thread waits.\n     * \u003cp\u003e\n     * Thread \u003cvar\u003eT\u003c/var\u003e then becomes disabled for thread scheduling purposes\n     * and lies dormant until one of the following occurs:\n     * \u003cul\u003e\n     * \u003cli\u003eSome other thread invokes the {@code notify} method for this\n     * object and thread \u003cvar\u003eT\u003c/var\u003e happens to be arbitrarily chosen as\n     * the thread to be awakened.\n     * \u003cli\u003eSome other thread invokes the {@code notifyAll} method for this\n     * object.\n     * \u003cli\u003eSome other thread {@linkplain Thread#interrupt() interrupts}\n     * thread \u003cvar\u003eT\u003c/var\u003e.\n     * \u003cli\u003eThe specified amount of real time has elapsed, more or less.\n     * The amount of real time, in nanoseconds, is given by the expression\n     * {@code 1000000 * timeoutMillis + nanos}. If {@code timeoutMillis} and {@code nanos}\n     * are both zero, then real time is not taken into consideration and the\n     * thread waits until awakened by one of the other causes.\n     * \u003cli\u003eThread \u003cvar\u003eT\u003c/var\u003e is awakened spuriously. (See below.)\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * The thread \u003cvar\u003eT\u003c/var\u003e is then removed from the wait set for this\n     * object and re-enabled for thread scheduling. It competes in the\n     * usual manner with other threads for the right to synchronize on the\n     * object; once it has regained control of the object, all its\n     * synchronization claims on the object are restored to the status quo\n     * ante - that is, to the situation as of the time that the {@code wait}\n     * method was invoked. Thread \u003cvar\u003eT\u003c/var\u003e then returns from the\n     * invocation of the {@code wait} method. Thus, on return from the\n     * {@code wait} method, the synchronization state of the object and of\n     * thread {@code T} is exactly as it was when the {@code wait} method\n     * was invoked.\n     * \u003cp\u003e\n     * A thread can wake up without being notified, interrupted, or timing out, a\n     * so-called \u003cem\u003espurious wakeup\u003c/em\u003e.  While this will rarely occur in practice,\n     * applications must guard against it by testing for the condition that should\n     * have caused the thread to be awakened, and continuing to wait if the condition\n     * is not satisfied. See the example below.\n     * \u003cp\u003e\n     * For more information on this topic, see section 14.2,\n     * \"Condition Queues,\" in Brian Goetz and others\u0027 \u003cem\u003eJava Concurrency\n     * in Practice\u003c/em\u003e (Addison-Wesley, 2006) or Item 69 in Joshua\n     * Bloch\u0027s \u003cem\u003eEffective Java, Second Edition\u003c/em\u003e (Addison-Wesley,\n     * 2008).\n     * \u003cp\u003e\n     * If the current thread is {@linkplain java.lang.Thread#interrupt() interrupted}\n     * by any thread before or while it is waiting, then an {@code InterruptedException}\n     * is thrown.  The \u003cem\u003einterrupted status\u003c/em\u003e of the current thread is cleared when\n     * this exception is thrown. This exception is not thrown until the lock status of\n     * this object has been restored as described above.\n     *\n     * @apiNote\n     * The recommended approach to waiting is to check the condition being awaited in\n     * a {@code while} loop around the call to {@code wait}, as shown in the example\n     * below. Among other things, this approach avoids problems that can be caused\n     * by spurious wakeups.\n     *\n     * \u003cpre\u003e{@code\n     *     synchronized (obj) {\n     *         while (\u003ccondition does not hold\u003e and \u003ctimeout not exceeded\u003e) {\n     *             long timeoutMillis \u003d ... ; // recompute timeout values\n     *             int nanos \u003d ... ;\n     *             obj.wait(timeoutMillis, nanos);\n     *         }\n     *         ... // Perform action appropriate to condition or timeout\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @param  nanos   additional time, in nanoseconds, in the range 0-999999 inclusive\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative,\n     *         or if the value of {@code nanos} is out of range\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long)\n     */\n    public final void wait(long timeoutMillis, int nanos) throws InterruptedException {\n        if (timeoutMillis \u003c 0) {\n            throw new IllegalArgumentException(\"timeoutMillis value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 timeoutMillis \u003c Long.MAX_VALUE) {\n            timeoutMillis++;\n        }\n\n        wait(timeoutMillis);\n    }\n\n    /**\n     * Called by the garbage collector on an object when garbage collection\n     * determines that there are no more references to the object.\n     * A subclass overrides the {@code finalize} method to dispose of\n     * system resources or to perform other cleanup.\n     * \u003cp\u003e\n     * The general contract of {@code finalize} is that it is invoked\n     * if and when the Java virtual\n     * machine has determined that there is no longer any\n     * means by which this object can be accessed by any thread that has\n     * not yet died, except as a result of an action taken by the\n     * finalization of some other object or class which is ready to be\n     * finalized. The {@code finalize} method may take any action, including\n     * making this object available again to other threads; the usual purpose\n     * of {@code finalize}, however, is to perform cleanup actions before\n     * the object is irrevocably discarded. For example, the finalize method\n     * for an object that represents an input/output connection might perform\n     * explicit I/O transactions to break the connection before the object is\n     * permanently discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method of class {@code Object} performs no\n     * special action; it simply returns normally. Subclasses of\n     * {@code Object} may override this definition.\n     * \u003cp\u003e\n     * The Java programming language does not guarantee which thread will\n     * invoke the {@code finalize} method for any given object. It is\n     * guaranteed, however, that the thread that invokes finalize will not\n     * be holding any user-visible synchronization locks when finalize is\n     * invoked. If an uncaught exception is thrown by the finalize method,\n     * the exception is ignored and finalization of that object terminates.\n     * \u003cp\u003e\n     * After the {@code finalize} method has been invoked for an object, no\n     * further action is taken until the Java virtual machine has again\n     * determined that there is no longer any means by which this object can\n     * be accessed by any thread that has not yet died, including possible\n     * actions by other objects or classes which are ready to be finalized,\n     * at which point the object may be discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method is never invoked more than once by a Java\n     * virtual machine for any given object.\n     * \u003cp\u003e\n     * Any exception thrown by the {@code finalize} method causes\n     * the finalization of this object to be halted, but is otherwise\n     * ignored.\n     *\n     * @apiNote\n     * Classes that embed non-heap resources have many options\n     * for cleanup of those resources. The class must ensure that the\n     * lifetime of each instance is longer than that of any resource it embeds.\n     * {@link java.lang.ref.Reference#reachabilityFence} can be used to ensure that\n     * objects remain reachable while resources embedded in the object are in use.\n     * \u003cp\u003e\n     * A subclass should avoid overriding the {@code finalize} method\n     * unless the subclass embeds non-heap resources that must be cleaned up\n     * before the instance is collected.\n     * Finalizer invocations are not automatically chained, unlike constructors.\n     * If a subclass overrides {@code finalize} it must invoke the superclass\n     * finalizer explicitly.\n     * To guard against exceptions prematurely terminating the finalize chain,\n     * the subclass should use a {@code try-finally} block to ensure\n     * {@code super.finalize()} is always invoked. For example,\n     * \u003cpre\u003e{@code      @Override\n     *     protected void finalize() throws Throwable {\n     *         try {\n     *             ... // cleanup subclass state\n     *         } finally {\n     *             super.finalize();\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @deprecated The finalization mechanism is inherently problematic.\n     * Finalization can lead to performance issues, deadlocks, and hangs.\n     * Errors in finalizers can lead to resource leaks; there is no way to cancel\n     * finalization if it is no longer necessary; and no ordering is specified\n     * among calls to {@code finalize} methods of different objects.\n     * Furthermore, there are no guarantees regarding the timing of finalization.\n     * The {@code finalize} method might be called on a finalizable object\n     * only after an indefinite delay, if at all.\n     *\n     * Classes whose instances hold non-heap resources should provide a method\n     * to enable explicit release of those resources, and they should also\n     * implement {@link AutoCloseable} if appropriate.\n     * The {@link java.lang.ref.Cleaner} and {@link java.lang.ref.PhantomReference}\n     * provide more flexible and efficient ways to release resources when an object\n     * becomes unreachable.\n     *\n     * @throws Throwable the {@code Exception} raised by this method\n     * @see java.lang.ref.WeakReference\n     * @see java.lang.ref.PhantomReference\n     * @jls 12.6 Finalization of Class Instances\n     */\n    @Deprecated(since\u003d\"9\")\n    protected void finalize() throws Throwable { }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 08, 2024 7:04:06 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.08 19:04:10 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:04:10 INFO  time: compiled root in 0.37s
2024.07.08 19:04:24 WARN  Using indexes to guess the definition of user
2024.07.08 19:04:24 WARN  Using indexes to guess the definition of getTasks
2024.07.08 19:04:24 WARN  Using indexes to guess the definition of TaskListInMemonryModel
2024.07.08 19:04:31 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:04:31 INFO  time: compiled root in 0.25s
2024.07.08 19:04:35 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:04:37 WARN  javac exited with exit code 1
2024.07.08 19:04:37 INFO  time: compiled root in 2.25s
2024.07.08 19:05:15 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:05:18 WARN  javac exited with exit code 1
2024.07.08 19:05:18 INFO  time: compiled root in 3.3s
2024.07.08 19:08:42 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:08:42 INFO  time: compiled root in 1s
Jul 08, 2024 7:09:12 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2706
Jul 08, 2024 7:09:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2723
2024.07.08 19:09:23 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:09:23 INFO  time: compiled root in 0.34s
Jul 08, 2024 7:09:41 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2761
2024.07.08 19:09:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:09:43 INFO  time: compiled root in 0.2s
2024.07.08 19:09:53 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:09:53 INFO  time: compiled root in 0.21s
2024.07.08 19:10:01 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:10:01 INFO  time: compiled root in 0.22s
2024.07.08 19:10:16 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:10:16 INFO  time: compiled root in 0.21s
2024.07.08 19:10:47 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:10:47 INFO  time: compiled root in 0.18s
2024.07.08 19:11:12 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:11:12 INFO  time: compiled root in 0.19s
2024.07.08 19:11:50 INFO  Report absolute-path: ### java.nio.file.NoSuchFileException: C:\Users\adars\AppData\Local\Coursier\cache\arc\https\github.com\adoptium\temurin17-binaries\releases\download\jdk-17%2B35\OpenJDK17-jdk_x64_windows_hotspot_17_35.zip\jdk-17 35\lib\src.zip

Uri: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17+35/lib/src.zip!/java.base/java/lang/Object.java


#### Error stacktrace:

```
jdk.zipfs/jdk.nio.zipfs.ZipFileSystem.<init>(ZipFileSystem.java:161)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.getZipFileSystem(ZipFileSystemProvider.java:125)
	jdk.zipfs/jdk.nio.zipfs.ZipFileSystemProvider.newFileSystem(ZipFileSystemProvider.java:106)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:339)
	java.base/java.nio.file.FileSystems.newFileSystem(FileSystems.java:288)
	scala.meta.internal.io.PlatformFileIO$.newFileSystem(PlatformFileIO.scala:90)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:126)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$4(MtagsEnrichments.scala:181)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:162)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:181)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 08, 2024 7:11:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\n\n/**\n * Class {@code Object} is the root of the class hierarchy.\n * Every class has {@code Object} as a superclass. All objects,\n * including arrays, implement the methods of this class.\n *\n * @see     java.lang.Class\n * @since   1.0\n */\npublic class Object {\n\n    /**\n     * Constructs a new object.\n     */\n    @IntrinsicCandidate\n    public Object() {}\n\n    /**\n     * Returns the runtime class of this {@code Object}. The returned\n     * {@code Class} object is the object that is locked by {@code\n     * static synchronized} methods of the represented class.\n     *\n     * \u003cp\u003e\u003cb\u003eThe actual result type is {@code Class\u003c? extends |X|\u003e}\n     * where {@code |X|} is the erasure of the static type of the\n     * expression on which {@code getClass} is called.\u003c/b\u003e For\n     * example, no cast is required in this code fragment:\u003c/p\u003e\n     *\n     * \u003cp\u003e\n     * {@code Number n \u003d 0;                             }\u003cbr\u003e\n     * {@code Class\u003c? extends Number\u003e c \u003d n.getClass(); }\n     * \u003c/p\u003e\n     *\n     * @return The {@code Class} object that represents the runtime\n     *         class of this object.\n     * @jls 15.8.2 Class Literals\n     */\n    @IntrinsicCandidate\n    public final native Class\u003c?\u003e getClass();\n\n    /**\n     * Returns a hash code value for the object. This method is\n     * supported for the benefit of hash tables such as those provided by\n     * {@link java.util.HashMap}.\n     * \u003cp\u003e\n     * The general contract of {@code hashCode} is:\n     * \u003cul\u003e\n     * \u003cli\u003eWhenever it is invoked on the same object more than once during\n     *     an execution of a Java application, the {@code hashCode} method\n     *     must consistently return the same integer, provided no information\n     *     used in {@code equals} comparisons on the object is modified.\n     *     This integer need not remain consistent from one execution of an\n     *     application to another execution of the same application.\n     * \u003cli\u003eIf two objects are equal according to the {@link\n     *     equals(Object) equals} method, then calling the {@code\n     *     hashCode} method on each of the two objects must produce the\n     *     same integer result.\n     * \u003cli\u003eIt is \u003cem\u003enot\u003c/em\u003e required that if two objects are unequal\n     *     according to the {@link equals(Object) equals} method, then\n     *     calling the {@code hashCode} method on each of the two objects\n     *     must produce distinct integer results.  However, the programmer\n     *     should be aware that producing distinct integer results for\n     *     unequal objects may improve the performance of hash tables.\n     * \u003c/ul\u003e\n     *\n     * @implSpec\n     * As far as is reasonably practical, the {@code hashCode} method defined\n     * by class {@code Object} returns distinct integers for distinct objects.\n     *\n     * @return  a hash code value for this object.\n     * @see     java.lang.Object#equals(java.lang.Object)\n     * @see     java.lang.System#identityHashCode\n     */\n    @IntrinsicCandidate\n    public native int hashCode();\n\n    /**\n     * Indicates whether some other object is \"equal to\" this one.\n     * \u003cp\u003e\n     * The {@code equals} method implements an equivalence relation\n     * on non-null object references:\n     * \u003cul\u003e\n     * \u003cli\u003eIt is \u003ci\u003ereflexive\u003c/i\u003e: for any non-null reference value\n     *     {@code x}, {@code x.equals(x)} should return\n     *     {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003esymmetric\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, {@code x.equals(y)}\n     *     should return {@code true} if and only if\n     *     {@code y.equals(x)} returns {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003etransitive\u003c/i\u003e: for any non-null reference values\n     *     {@code x}, {@code y}, and {@code z}, if\n     *     {@code x.equals(y)} returns {@code true} and\n     *     {@code y.equals(z)} returns {@code true}, then\n     *     {@code x.equals(z)} should return {@code true}.\n     * \u003cli\u003eIt is \u003ci\u003econsistent\u003c/i\u003e: for any non-null reference values\n     *     {@code x} and {@code y}, multiple invocations of\n     *     {@code x.equals(y)} consistently return {@code true}\n     *     or consistently return {@code false}, provided no\n     *     information used in {@code equals} comparisons on the\n     *     objects is modified.\n     * \u003cli\u003eFor any non-null reference value {@code x},\n     *     {@code x.equals(null)} should return {@code false}.\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * An equivalence relation partitions the elements it operates on\n     * into \u003ci\u003eequivalence classes\u003c/i\u003e; all the members of an\n     * equivalence class are equal to each other. Members of an\n     * equivalence class are substitutable for each other, at least\n     * for some purposes.\n     *\n     * @implSpec\n     * The {@code equals} method for class {@code Object} implements\n     * the most discriminating possible equivalence relation on objects;\n     * that is, for any non-null reference values {@code x} and\n     * {@code y}, this method returns {@code true} if and only\n     * if {@code x} and {@code y} refer to the same object\n     * ({@code x \u003d\u003d y} has the value {@code true}).\n     *\n     * In other words, under the reference equality equivalence\n     * relation, each equivalence class only has a single element.\n     *\n     * @apiNote\n     * It is generally necessary to override the {@link hashCode hashCode}\n     * method whenever this method is overridden, so as to maintain the\n     * general contract for the {@code hashCode} method, which states\n     * that equal objects must have equal hash codes.\n     *\n     * @param   obj   the reference object with which to compare.\n     * @return  {@code true} if this object is the same as the obj\n     *          argument; {@code false} otherwise.\n     * @see     #hashCode()\n     * @see     java.util.HashMap\n     */\n    public boolean equals(Object obj) {\n        return (this \u003d\u003d obj);\n    }\n\n    /**\n     * Creates and returns a copy of this object.  The precise meaning\n     * of \"copy\" may depend on the class of the object. The general\n     * intent is that, for any object {@code x}, the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone() !\u003d x\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be true, and that the expression:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().getClass() \u003d\u003d x.getClass()\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, but these are not absolute requirements.\n     * While it is typically the case that:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * x.clone().equals(x)\u003c/pre\u003e\u003c/blockquote\u003e\n     * will be {@code true}, this is not an absolute requirement.\n     * \u003cp\u003e\n     * By convention, the returned object should be obtained by calling\n     * {@code super.clone}.  If a class and all of its superclasses (except\n     * {@code Object}) obey this convention, it will be the case that\n     * {@code x.clone().getClass() \u003d\u003d x.getClass()}.\n     * \u003cp\u003e\n     * By convention, the object returned by this method should be independent\n     * of this object (which is being cloned).  To achieve this independence,\n     * it may be necessary to modify one or more fields of the object returned\n     * by {@code super.clone} before returning it.  Typically, this means\n     * copying any mutable objects that comprise the internal \"deep structure\"\n     * of the object being cloned and replacing the references to these\n     * objects with references to the copies.  If a class contains only\n     * primitive fields or references to immutable objects, then it is usually\n     * the case that no fields in the object returned by {@code super.clone}\n     * need to be modified.\n     *\n     * @implSpec\n     * The method {@code clone} for class {@code Object} performs a\n     * specific cloning operation. First, if the class of this object does\n     * not implement the interface {@code Cloneable}, then a\n     * {@code CloneNotSupportedException} is thrown. Note that all arrays\n     * are considered to implement the interface {@code Cloneable} and that\n     * the return type of the {@code clone} method of an array type {@code T[]}\n     * is {@code T[]} where T is any reference or primitive type.\n     * Otherwise, this method creates a new instance of the class of this\n     * object and initializes all its fields with exactly the contents of\n     * the corresponding fields of this object, as if by assignment; the\n     * contents of the fields are not themselves cloned. Thus, this method\n     * performs a \"shallow copy\" of this object, not a \"deep copy\" operation.\n     * \u003cp\u003e\n     * The class {@code Object} does not itself implement the interface\n     * {@code Cloneable}, so calling the {@code clone} method on an object\n     * whose class is {@code Object} will result in throwing an\n     * exception at run time.\n     *\n     * @return     a clone of this instance.\n     * @throws  CloneNotSupportedException  if the object\u0027s class does not\n     *               support the {@code Cloneable} interface. Subclasses\n     *               that override the {@code clone} method can also\n     *               throw this exception to indicate that an instance cannot\n     *               be cloned.\n     * @see java.lang.Cloneable\n     */\n    @IntrinsicCandidate\n    protected native Object clone() throws CloneNotSupportedException;\n\n    /**\n     * Returns a string representation of the object.\n     * @apiNote\n     * In general, the\n     * {@code toString} method returns a string that\n     * \"textually represents\" this object. The result should\n     * be a concise but informative representation that is easy for a\n     * person to read.\n     * It is recommended that all subclasses override this method.\n     * The string output is not necessarily stable over time or across\n     * JVM invocations.\n     * @implSpec\n     * The {@code toString} method for class {@code Object}\n     * returns a string consisting of the name of the class of which the\n     * object is an instance, the at-sign character `{@code @}\u0027, and\n     * the unsigned hexadecimal representation of the hash code of the\n     * object. In other words, this method returns a string equal to the\n     * value of:\n     * \u003cblockquote\u003e\n     * \u003cpre\u003e\n     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @return  a string representation of the object.\n     */\n    public String toString() {\n        return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n    }\n\n    /**\n     * Wakes up a single thread that is waiting on this object\u0027s\n     * monitor. If any threads are waiting on this object, one of them\n     * is chosen to be awakened. The choice is arbitrary and occurs at\n     * the discretion of the implementation. A thread waits on an object\u0027s\n     * monitor by calling one of the {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened thread will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened thread will\n     * compete in the usual manner with any other threads that might be\n     * actively competing to synchronize on this object; for example, the\n     * awakened thread enjoys no reliable privilege or disadvantage in being\n     * the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. A thread becomes the owner of the\n     * object\u0027s monitor in one of three ways:\n     * \u003cul\u003e\n     * \u003cli\u003eBy executing a synchronized instance method of that object.\n     * \u003cli\u003eBy executing the body of a {@code synchronized} statement\n     *     that synchronizes on the object.\n     * \u003cli\u003eFor objects of type {@code Class,} by executing a\n     *     synchronized static method of that class.\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * Only one thread at a time can own an object\u0027s monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notifyAll()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notify();\n\n    /**\n     * Wakes up all threads that are waiting on this object\u0027s monitor. A\n     * thread waits on an object\u0027s monitor by calling one of the\n     * {@code wait} methods.\n     * \u003cp\u003e\n     * The awakened threads will not be able to proceed until the current\n     * thread relinquishes the lock on this object. The awakened threads\n     * will compete in the usual manner with any other threads that might\n     * be actively competing to synchronize on this object; for example,\n     * the awakened threads enjoy no reliable privilege or disadvantage in\n     * being the next thread to lock this object.\n     * \u003cp\u003e\n     * This method should only be called by a thread that is the owner\n     * of this object\u0027s monitor. See the {@code notify} method for a\n     * description of the ways in which a thread can become the owner of\n     * a monitor.\n     *\n     * @throws  IllegalMonitorStateException  if the current thread is not\n     *               the owner of this object\u0027s monitor.\n     * @see        java.lang.Object#notify()\n     * @see        java.lang.Object#wait()\n     */\n    @IntrinsicCandidate\n    public final native void notifyAll();\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(0L, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait(long)\n     * @see    #wait(long, int)\n     */\n    public final void wait() throws InterruptedException {\n        wait(0L);\n    }\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * In all respects, this method behaves as if {@code wait(timeoutMillis, 0)}\n     * had been called. See the specification of the {@link #wait(long, int)} method\n     * for details.\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long, int)\n     */\n    public final native void wait(long timeoutMillis) throws InterruptedException;\n\n    /**\n     * Causes the current thread to wait until it is awakened, typically\n     * by being \u003cem\u003enotified\u003c/em\u003e or \u003cem\u003einterrupted\u003c/em\u003e, or until a\n     * certain amount of real time has elapsed.\n     * \u003cp\u003e\n     * The current thread must own this object\u0027s monitor lock. See the\n     * {@link #notify notify} method for a description of the ways in which\n     * a thread can become the owner of a monitor lock.\n     * \u003cp\u003e\n     * This method causes the current thread (referred to here as \u003cvar\u003eT\u003c/var\u003e) to\n     * place itself in the wait set for this object and then to relinquish any\n     * and all synchronization claims on this object. Note that only the locks\n     * on this object are relinquished; any other objects on which the current\n     * thread may be synchronized remain locked while the thread waits.\n     * \u003cp\u003e\n     * Thread \u003cvar\u003eT\u003c/var\u003e then becomes disabled for thread scheduling purposes\n     * and lies dormant until one of the following occurs:\n     * \u003cul\u003e\n     * \u003cli\u003eSome other thread invokes the {@code notify} method for this\n     * object and thread \u003cvar\u003eT\u003c/var\u003e happens to be arbitrarily chosen as\n     * the thread to be awakened.\n     * \u003cli\u003eSome other thread invokes the {@code notifyAll} method for this\n     * object.\n     * \u003cli\u003eSome other thread {@linkplain Thread#interrupt() interrupts}\n     * thread \u003cvar\u003eT\u003c/var\u003e.\n     * \u003cli\u003eThe specified amount of real time has elapsed, more or less.\n     * The amount of real time, in nanoseconds, is given by the expression\n     * {@code 1000000 * timeoutMillis + nanos}. If {@code timeoutMillis} and {@code nanos}\n     * are both zero, then real time is not taken into consideration and the\n     * thread waits until awakened by one of the other causes.\n     * \u003cli\u003eThread \u003cvar\u003eT\u003c/var\u003e is awakened spuriously. (See below.)\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * The thread \u003cvar\u003eT\u003c/var\u003e is then removed from the wait set for this\n     * object and re-enabled for thread scheduling. It competes in the\n     * usual manner with other threads for the right to synchronize on the\n     * object; once it has regained control of the object, all its\n     * synchronization claims on the object are restored to the status quo\n     * ante - that is, to the situation as of the time that the {@code wait}\n     * method was invoked. Thread \u003cvar\u003eT\u003c/var\u003e then returns from the\n     * invocation of the {@code wait} method. Thus, on return from the\n     * {@code wait} method, the synchronization state of the object and of\n     * thread {@code T} is exactly as it was when the {@code wait} method\n     * was invoked.\n     * \u003cp\u003e\n     * A thread can wake up without being notified, interrupted, or timing out, a\n     * so-called \u003cem\u003espurious wakeup\u003c/em\u003e.  While this will rarely occur in practice,\n     * applications must guard against it by testing for the condition that should\n     * have caused the thread to be awakened, and continuing to wait if the condition\n     * is not satisfied. See the example below.\n     * \u003cp\u003e\n     * For more information on this topic, see section 14.2,\n     * \"Condition Queues,\" in Brian Goetz and others\u0027 \u003cem\u003eJava Concurrency\n     * in Practice\u003c/em\u003e (Addison-Wesley, 2006) or Item 69 in Joshua\n     * Bloch\u0027s \u003cem\u003eEffective Java, Second Edition\u003c/em\u003e (Addison-Wesley,\n     * 2008).\n     * \u003cp\u003e\n     * If the current thread is {@linkplain java.lang.Thread#interrupt() interrupted}\n     * by any thread before or while it is waiting, then an {@code InterruptedException}\n     * is thrown.  The \u003cem\u003einterrupted status\u003c/em\u003e of the current thread is cleared when\n     * this exception is thrown. This exception is not thrown until the lock status of\n     * this object has been restored as described above.\n     *\n     * @apiNote\n     * The recommended approach to waiting is to check the condition being awaited in\n     * a {@code while} loop around the call to {@code wait}, as shown in the example\n     * below. Among other things, this approach avoids problems that can be caused\n     * by spurious wakeups.\n     *\n     * \u003cpre\u003e{@code\n     *     synchronized (obj) {\n     *         while (\u003ccondition does not hold\u003e and \u003ctimeout not exceeded\u003e) {\n     *             long timeoutMillis \u003d ... ; // recompute timeout values\n     *             int nanos \u003d ... ;\n     *             obj.wait(timeoutMillis, nanos);\n     *         }\n     *         ... // Perform action appropriate to condition or timeout\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @param  timeoutMillis the maximum time to wait, in milliseconds\n     * @param  nanos   additional time, in nanoseconds, in the range 0-999999 inclusive\n     * @throws IllegalArgumentException if {@code timeoutMillis} is negative,\n     *         or if the value of {@code nanos} is out of range\n     * @throws IllegalMonitorStateException if the current thread is not\n     *         the owner of the object\u0027s monitor\n     * @throws InterruptedException if any thread interrupted the current thread before or\n     *         while the current thread was waiting. The \u003cem\u003einterrupted status\u003c/em\u003e of the\n     *         current thread is cleared when this exception is thrown.\n     * @see    #notify()\n     * @see    #notifyAll()\n     * @see    #wait()\n     * @see    #wait(long)\n     */\n    public final void wait(long timeoutMillis, int nanos) throws InterruptedException {\n        if (timeoutMillis \u003c 0) {\n            throw new IllegalArgumentException(\"timeoutMillis value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 timeoutMillis \u003c Long.MAX_VALUE) {\n            timeoutMillis++;\n        }\n\n        wait(timeoutMillis);\n    }\n\n    /**\n     * Called by the garbage collector on an object when garbage collection\n     * determines that there are no more references to the object.\n     * A subclass overrides the {@code finalize} method to dispose of\n     * system resources or to perform other cleanup.\n     * \u003cp\u003e\n     * The general contract of {@code finalize} is that it is invoked\n     * if and when the Java virtual\n     * machine has determined that there is no longer any\n     * means by which this object can be accessed by any thread that has\n     * not yet died, except as a result of an action taken by the\n     * finalization of some other object or class which is ready to be\n     * finalized. The {@code finalize} method may take any action, including\n     * making this object available again to other threads; the usual purpose\n     * of {@code finalize}, however, is to perform cleanup actions before\n     * the object is irrevocably discarded. For example, the finalize method\n     * for an object that represents an input/output connection might perform\n     * explicit I/O transactions to break the connection before the object is\n     * permanently discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method of class {@code Object} performs no\n     * special action; it simply returns normally. Subclasses of\n     * {@code Object} may override this definition.\n     * \u003cp\u003e\n     * The Java programming language does not guarantee which thread will\n     * invoke the {@code finalize} method for any given object. It is\n     * guaranteed, however, that the thread that invokes finalize will not\n     * be holding any user-visible synchronization locks when finalize is\n     * invoked. If an uncaught exception is thrown by the finalize method,\n     * the exception is ignored and finalization of that object terminates.\n     * \u003cp\u003e\n     * After the {@code finalize} method has been invoked for an object, no\n     * further action is taken until the Java virtual machine has again\n     * determined that there is no longer any means by which this object can\n     * be accessed by any thread that has not yet died, including possible\n     * actions by other objects or classes which are ready to be finalized,\n     * at which point the object may be discarded.\n     * \u003cp\u003e\n     * The {@code finalize} method is never invoked more than once by a Java\n     * virtual machine for any given object.\n     * \u003cp\u003e\n     * Any exception thrown by the {@code finalize} method causes\n     * the finalization of this object to be halted, but is otherwise\n     * ignored.\n     *\n     * @apiNote\n     * Classes that embed non-heap resources have many options\n     * for cleanup of those resources. The class must ensure that the\n     * lifetime of each instance is longer than that of any resource it embeds.\n     * {@link java.lang.ref.Reference#reachabilityFence} can be used to ensure that\n     * objects remain reachable while resources embedded in the object are in use.\n     * \u003cp\u003e\n     * A subclass should avoid overriding the {@code finalize} method\n     * unless the subclass embeds non-heap resources that must be cleaned up\n     * before the instance is collected.\n     * Finalizer invocations are not automatically chained, unlike constructors.\n     * If a subclass overrides {@code finalize} it must invoke the superclass\n     * finalizer explicitly.\n     * To guard against exceptions prematurely terminating the finalize chain,\n     * the subclass should use a {@code try-finally} block to ensure\n     * {@code super.finalize()} is always invoked. For example,\n     * \u003cpre\u003e{@code      @Override\n     *     protected void finalize() throws Throwable {\n     *         try {\n     *             ... // cleanup subclass state\n     *         } finally {\n     *             super.finalize();\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     *\n     * @deprecated The finalization mechanism is inherently problematic.\n     * Finalization can lead to performance issues, deadlocks, and hangs.\n     * Errors in finalizers can lead to resource leaks; there is no way to cancel\n     * finalization if it is no longer necessary; and no ordering is specified\n     * among calls to {@code finalize} methods of different objects.\n     * Furthermore, there are no guarantees regarding the timing of finalization.\n     * The {@code finalize} method might be called on a finalizable object\n     * only after an indefinite delay, if at all.\n     *\n     * Classes whose instances hold non-heap resources should provide a method\n     * to enable explicit release of those resources, and they should also\n     * implement {@link AutoCloseable} if appropriate.\n     * The {@link java.lang.ref.Cleaner} and {@link java.lang.ref.PhantomReference}\n     * provide more flexible and efficient ways to release resources when an object\n     * becomes unreachable.\n     *\n     * @throws Throwable the {@code Exception} raised by this method\n     * @see java.lang.ref.WeakReference\n     * @see java.lang.ref.PhantomReference\n     * @jls 12.6 Finalization of Class Instances\n     */\n    @Deprecated(since\u003d\"9\")\n    protected void finalize() throws Throwable { }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 08, 2024 7:11:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Object.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/adars/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Object.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.08 19:11:56 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:11:56 INFO  time: compiled root in 0.22s
2024.07.08 19:12:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:12:43 INFO  time: compiled root in 0.2s
2024.07.08 19:12:48 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:12:51 WARN  javac exited with exit code 1
2024.07.08 19:12:51 INFO  time: compiled root in 2.71s
2024.07.08 19:13:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:13:24 WARN  javac exited with exit code 1
2024.07.08 19:13:24 INFO  time: compiled root in 2.62s
Jul 08, 2024 7:16:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3257
Jul 08, 2024 7:16:15 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3273
Jul 08, 2024 7:16:18 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3289
2024.07.08 19:16:19 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:16:21 WARN  javac exited with exit code 1
2024.07.08 19:16:21 INFO  time: compiled root in 2.24s
2024.07.08 19:20:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:20:04 WARN  javac exited with exit code 1
2024.07.08 19:20:04 INFO  time: compiled root in 4.44s
2024.07.08 19:20:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:20:36 INFO  time: compiled root in 0.16s
2024.07.08 19:21:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:21:03 WARN  javac exited with exit code 1
2024.07.08 19:21:03 INFO  time: compiled root in 2.58s
2024.07.08 19:21:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:21:30 WARN  javac exited with exit code 1
2024.07.08 19:21:30 INFO  time: compiled root in 2.36s
2024.07.08 19:21:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:21:43 INFO  time: compiled root in 0.22s
2024.07.08 19:21:52 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:21:55 WARN  javac exited with exit code 1
2024.07.08 19:21:55 INFO  time: compiled root in 2.74s
2024.07.08 19:22:32 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:22:35 WARN  javac exited with exit code 1
2024.07.08 19:22:35 INFO  time: compiled root in 2.52s
2024.07.08 19:23:04 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:23:06 WARN  javac exited with exit code 1
2024.07.08 19:23:06 INFO  time: compiled root in 2.4s
2024.07.08 19:24:33 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:24:35 WARN  javac exited with exit code 1
2024.07.08 19:24:35 INFO  time: compiled root in 2.46s
2024.07.08 19:25:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:25:02 WARN  javac exited with exit code 1
2024.07.08 19:25:02 INFO  time: compiled root in 2.31s
2024.07.08 19:25:08 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:25:11 WARN  javac exited with exit code 1
2024.07.08 19:25:11 INFO  time: compiled root in 3.01s
2024.07.08 19:25:29 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:25:31 WARN  javac exited with exit code 1
2024.07.08 19:25:31 INFO  time: compiled root in 2.33s
2024.07.08 19:25:38 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:25:40 WARN  javac exited with exit code 1
2024.07.08 19:25:40 INFO  time: compiled root in 1.98s
2024.07.08 19:25:43 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:25:45 WARN  javac exited with exit code 1
2024.07.08 19:25:45 INFO  time: compiled root in 1.92s
2024.07.08 19:25:59 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:26:01 WARN  javac exited with exit code 1
2024.07.08 19:26:01 INFO  time: compiled root in 2.47s
2024.07.08 19:26:23 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:26:26 WARN  javac exited with exit code 1
2024.07.08 19:26:26 INFO  time: compiled root in 2.33s
Jul 08, 2024 7:27:00 PM scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
INFO: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
Jul 08, 2024 7:27:01 PM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report A:\developement\scala project\todo\.metals\.reports\metals-full\2024-07-08\r_compiler-error_(root)_19-27-01-268.md
2024.07.08 19:27:31 WARN  Using indexes to guess the definition of addTask
2024.07.08 19:27:46 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala:122: error: [dialect scala213] } expected but end of file found

^
Jul 08, 2024 7:28:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3621
Jul 08, 2024 7:28:18 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3634
2024.07.08 19:28:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:28:36 INFO  time: compiled root in 0.41s
2024.07.08 19:28:50 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:28:50 INFO  time: compiled root in 0.35s
2024.07.08 19:28:54 WARN  Using indexes to guess the definition of taskList
Jul 08, 2024 7:28:55 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3771
2024.07.08 19:29:01 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:29:01 INFO  time: compiled root in 0.31s
2024.07.08 19:29:10 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:29:10 INFO  time: compiled root in 0.21s
2024.07.08 19:31:23 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:31:23 INFO  time: compiled root in 0.3s
Jul 08, 2024 7:33:39 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3900
2024.07.08 19:34:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:34:21 INFO  time: compiled root in 0.47s
2024.07.08 19:34:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:34:28 INFO  time: compiled root in 0.26s
2024.07.08 19:35:17 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:35:17 INFO  time: compiled root in 0.23s
2024.07.08 19:35:19 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:35:19 INFO  time: compiled root in 0.2s
2024.07.08 19:35:43 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala:124: error: [dialect scala213] } expected but end of file found

^
2024.07.08 19:35:47 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:35:47 INFO  time: compiled root in 0.22s
2024.07.08 19:35:57 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:35:57 INFO  time: compiled root in 0.11s
2024.07.08 19:36:09 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:09 INFO  time: compiled root in 0.21s
2024.07.08 19:36:15 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala:124: error: [dialect scala213] } expected but end of file found

^
2024.07.08 19:36:19 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:19 INFO  time: compiled root in 0.11s
2024.07.08 19:36:20 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala:101: error: [dialect scala213] } expected but end of file found

^
2024.07.08 19:36:21 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:21 INFO  time: compiled root in 0.11s
2024.07.08 19:36:27 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:27 INFO  time: compiled root in 0.2s
2024.07.08 19:36:28 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:28 INFO  time: compiled root in 0.2s
2024.07.08 19:36:56 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:36:56 INFO  time: compiled root in 0.12s
2024.07.08 19:37:01 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:37:01 INFO  time: compiled root in 0.1s
2024.07.08 19:37:20 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:37:20 INFO  time: compiled root in 0.22s
2024.07.08 19:37:36 ERROR scalafmt: A:\developement\scala project\todo\todolist\app\controllers\TaskList1.scala:124: error: [dialect scala213] end of file expected but } found
}
^
2024.07.08 19:37:36 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:37:36 INFO  time: compiled root in 0.13s
Jul 08, 2024 7:37:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4820
2024.07.08 19:37:45 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:37:47 WARN  javac exited with exit code 1
2024.07.08 19:37:47 INFO  time: compiled root in 2.63s
2024.07.08 19:38:00 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:38:02 WARN  javac exited with exit code 1
2024.07.08 19:38:02 INFO  time: compiled root in 2.44s
Jul 08, 2024 7:38:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4855
Jul 08, 2024 7:38:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4870
Jul 08, 2024 7:38:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4871
Jul 08, 2024 7:38:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4872
Jul 08, 2024 7:38:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4882
Jul 08, 2024 7:39:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4910
Jul 08, 2024 7:39:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4926
2024.07.08 19:39:09 INFO  scalafmt: excluded A:\developement\scala project\todo\todolist\conf\routes (to format this file, update `project.excludeFilters` in .scalafmt.conf)
2024.07.08 19:40:24 INFO  compiling root (12 scala sources and 1 java source)
2024.07.08 19:40:28 WARN  javac exited with exit code 1
2024.07.08 19:40:28 INFO  time: compiled root in 4s
